{
  "hash": "7d8971058cfd965820cd7a53c74503ce",
  "result": {
    "markdown": "---\ntitle: \"KAIST IAM Group\"\ndate : last-modified # now\nauthor: \n - name: \"안지석\"\n   affiliation: \"KAIST ITM\"\ntitle-block-banner: true\nformat: \n  html:\n    theme: flatly\n    code-fold: true\n    toc: true\n    toc-depth: 2\n    toc-title: 목차\n    number-sections : true\n    highlight-style: github\n    self-contained: false\nexecute: \n  freeze: true\n---\n\n\n# Core Model Proposal #359: Hydrogen and transportation technology update\n\n## Transportation\n\n-   Natural Gas Vehicles(NGV)\n-   Light-duty vehicles\n    -   지역별로 LDV의 사이즈를 4개씩 구분하였고, 각각의 배터리 용량(kwh poer vehicle) 제시\n    -   BEV battery pack costs는 2020 BNEF EV Outlook에서 가져옴\n    -   cost mark-up??\n    -   Fuel cell stack costs는 [NREL, 2020 Transportation Annual Technology Baseline](https://atb.nrel.gov/transportation/2020/index)에서 가져옴\n\n## transportation_UCD_CORE_CurPol_Korea_Dawoon\n\n-   region : South Korea\n    -   supplysector :\n        -   항공 :\n            -   aviation_intl\n        -   화물 :\n            -   freight\n            -   freight_road\n        -   여객 :\n            -   pass_road\n            -   pass_road_LDV\n            -   pass_road_LDV_4W\n        -   해운 :\n            -   shipping_intl\n    -   energy_final_demand\n        -   항공:\n            -   aviation_intl\n        -   화물:\n            -   freight\n        -   여객:\n            -   pass\n        -   해운:\n            -   shipping_intl\n\n<br>\n\n-   gcam-7의 transportation_UCD_CORE.xml과 비교해보니, supplysector, energy-final-demand의 구성 name은 동일함\n-   The most common failure to run GCAM when double clicking the run-gcam executable script typically relate to Java.\n-   model running 테스트 -\\> `All model periods solved correctly.`\n\n![스크린샷](./img/solved_correctly.png)\n\n-   Model run 결과는 exe - log - main_log.txt 에서 확인 가능\n-   output - queries\n-   ModelInterface - run-model-interface.bat\n\n![Model interface](./img/model_interface.png) \\### transportation\n\n![](./img/modelinterface_trn.png)\n\n# 2023-08-21 meeting with prof.Jeon\n\n-   GCAM7에는 trn_freight_road(트럭)에 hybrid 추가됨. Dawoon 파일에는 hybrid 없음\n-   Created new xml configuration by adding lines\n\n::: callout-note\nfor `<Configuration>` `<Value name = \"transport\">../input/gcamdata/xml/transportation_UCD_SSP1.xml</Value>`\n:::\n\n::: callout-important\n## 분석기간을 2100년이 아닌 2050년까지만 보고싶은데;;; 오류남.\n\nfor stop year `<Value name=\"stop-year\">2050</Value>` -\\> DOESN'T WORK!!!\n:::\n\n-   Saved as `configuration_transportation_SSP1.xml` for backup\n\n-   Again, saved it as `configuration.xlm` cause `run-batct.cat` in exe folder take `configuration.xlm`(not configuration_transporation_SSP1.xml) as input file\n\n-   run model ![model](./img/model_solved.png)\n\n-   for checking model results, go to Modelinterface folder, and click `run-model-interface.bat` and File - Open -DB Open\n\n![model run result](./img/model_interface_2.png)\n\n-   configuration.xml 파일에 `vale name = solver` 밑에 새로운 `value name = transport` 추가\n\n![](./img/value_name.png)\n\n\n::: {.cell}\n\n:::\n\n\n# 2023-08-22\n\n### git bash or tortoiseGit?\n\n-   Instead of using `tortoiseGit`, I hope to use `git bash`. Running `tortoise git` takes quite a long time when targeted `.xml` files are heavy. For using, CLI(Command line interface) needs to be learned. But, steep learning curve :(\n\n### git diff\n\nShow changes between commits, commit and working tree, etc\n\n-   Tried to use `git diff` to see difference between versions in a file.\n    1.  moved `transportation_UCD_CORE.xml` into a test folder\n\n    2.  modified a `speed` in 2020 from 450 to 500 for make a difference. and then saved it.\n\n![](./img/diff_test.png)\n\n3.  Result. We can find a difference without add or commit. just typing `git diff` gives the difference.\n\n![](./img/diff_test_result.png)\n\n4.Modified `speed` in 2030, 2035 and typed `git diff` again. Same as 2.\n\n![](./img/git_diff_result2.png)\n\n5.  Commit `git commit` and track my log using `git log`\n\n![](./img/git_log.png)\n\n6.  what's next? reset? revert?\n\n-   DAC file\n\n# 2023-08-29\n\n-   수송분야 transport.configuration_transportation_dawoon.xml\n\n## Representation of H2 in GCAM\n\n-   Tried to make a flow chart of hydrogen in GCAM using `mermaid`\n\n::: column-page\n\n```{mermaid}\nflowchart TD\n  Electricity --> H2centralproduction\n  Electricity --> H2wholesaledispensing\n  Electricity --> H2industrial\n  Wind --> H2centralproduction\n  Solar --> H2centralproduction\n  Coal --> H2centralproduction\n  Nuclear --> H2centralproduction\n  Gas --> H2centralproduction\n  Gas --> H2wholesaledispensing\n  H2centralproduction --> H2deliverytrack\n  H2centralproduction --> H2pipeline\n  H2deliverytrack --> H2wholesaledelivery\n  H2deliverytrack --> H2wholesaledispensing\n  H2pipeline --> H2wholesaledelivery \n  H2pipeline --> H2wholesaledispensing\n  H2wholesaledelivery --> H2rentaldelivery\n  H2wholesaledelivery --> H2industrial\n  H2rentaldelivery --> CommercialBuildings\n  H2rentaldelivery --> ResidentialBuildings\n  H2industrial --> AmmoniaProduction\n  H2industrial --> IronandSteelProduction\n  H2industrial --> IndustrialEnergyUse\n  H2wholesaledispensing --> AgriculturalMachinery\n  H2wholesaledispensing --> ConstruntionEquipment\n  H2wholesaledispensing --> MiningEquipment\n  H2wholesaledispensing --> H2rentaldispensing\n  H2rentaldispensing --> HeavyDutyTrucks\n  H2rentaldispensing --> LightDutyVehicles\n  H2rentaldispensing --> AirTransport\n  H2rentaldispensing --> RailTransport\n  H2rentaldispensing --> ShipTransport\n```\n\n:::\n\n# 2023-08-31\n\n## To do\n\n-   Comparing `dac_ssp2.xml` and `dac_ssp_x3.xml`. Maybe \\_x3 means that the value has increased by 3 times??\n\n-   `transportation_UCD_CORE.xml` is default in configuration file in GCAM7. `transportation_UCD_CORE_CurPol_KOREA_Dawoon.xml`, `transportation_UCD_CORE_NetZero_KOREA_Dawoon.xml` in GCAM-KAIST2.0. Run `KOREA` files in GCAM7.\n\n## Failure\n\n-   Run a model with `transportation_UCD_CORE.xml`(default file in GCAM7.0) -\\> Of course, it worked!\n\n-   Run a model with `transportation_UCD_CORE_CurPol_KOREA_Dawoon.xml` from GCAM-KAIST2.0 -\\> ERROR! error messages are as follows.\n\n::: callout-important\n## erorr message\n\n-   Unknown tag: loadFactor encountered while processing period\\\n-   Market info object cannot be returned because market H2 enduse in XX does not exit\\\n-   Called for price of non-existant market H2 enduse in region XX\\\n:::\n\n-   Tried to find a way to see the differences in different XML files in R. But couldn't. What is the best way to see the structure of XML? and easy way to do `diff`?\n\n-   Tried to run `library(rgcam)` but... failed. need to explore more.\n\n## Success\n\n-   Let's check the difference btw `dac_ssp2.xml` and `dap_ssp2_x3.xml` scenarios.\n\n-   Based on the scenarios described below, ran a model to see the different results caused by two dac scenarios. `dac_ssp2` and `dac_ssp2_x3`\n\n::: callout-note\n## common scenarios(.xml) applied for two dac_ssp2 & dap_ssp2_x3 comparison\n\n-   <Value name = \"1p5\">../input/Korea/1p5-incr-UC-kor-LUC-Kwangnam.xml</Value> \n-   <Value name = \"GHG_link_Korea\">../input/Korea/GHG_link_Kor.xml</Value> \\\n-   <Value name = \"world_deeper_decarbonization_2050\">../input/Korea/FFI-const-row-deeper-decarb-2050-1p5-6000-Linear.xml</Value> \\\n-   <Value name = \"GHG_link_row\">../input/Korea/PCT_CO2_LUC_link_p10_row.xml</Value>\\\n:::\n\n-   Discovery of `library(gcamaextractor)`\n\n-   `gcamextractor` is R package used to extract and process GCAM data and manipulate into standardized tables. gcamextractor converts GCAM outputs into commonly used units as well as aggregates across different classes and sectors for easy use in plots, maps and tables. See [Details](https://jgcri.github.io/gcamextractor/articles/vignette_parameters.html).\n\n\n::: {.cell}\n\n:::\n\n\n-   line charts\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(gghighlight)\n\ndac_data<- read_excel('./KAIST_IAM_GROUP/results.xlsx')\n\ndata_tidy<- dac_data %>% \n    select(-scenario, -region) %>% \n    relocate(type, query) %>% \n    pivot_longer(-c('type', 'query', 'sector'), names_to =\"year\", values_to = \"MTC\") %>% \n    mutate( year = as.numeric(year))\n\ndata_tidy %>% \n    filter(query == \"sequestration\") %>% \n    ggplot(aes(x= year, y = MTC, group = sector, color = type))+\n    geom_line()+\n    facet_wrap(~sector)+\n    labs(title= \"Comparison between scenario dap_ssp2 and dap_ssp_x3\")\n```\n\n::: {.cell-output-display}\n![](KAIST_IAM_GROUP_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\ndata_tidy %>% \n    filter(query == \"emission\") %>% \n    ggplot(aes(x= year, y = MTC, group = sector, color = type))+\n    geom_line()+\n    facet_wrap(~type)+\n    labs(title= \"Comparison between scenario dap_ssp2 and dap_ssp_x3\")\n```\n\n::: {.cell-output-display}\n![](KAIST_IAM_GROUP_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n:::\n\n\n### Results\n\n-   I used `library(gcamextractor)` to ease data manipulation burden and make the differences in result more visible.\n\n-   Results from two scenarios showed no big differences (the results are almost identical).\n\n-   Figures below show the results, and it seems like there is only one scenario not two.\n\n![](KAIST_IAM_GROUP/withBio.png)\n\n![](KAIST_IAM_GROUP/noBio.png)\n\n-   Make a chart using `library(rchart)`\n\n![](KAIST_IAM_GROUP/chart_param.png)\n\n![](KAIST_IAM_GROUP/chart_class.png)\n\n## Needs to be done\n\n-   How to see the structure of XML files in R? Using `XML`, `XML2` libraries or `rgacm` library works?\n\n-   What are the parameters we need to focus on? in dac scenario analysis I just selected the `emissCO2BySector` and `emissCO2BySectorNoBio`. What else should I consider? -\\>**NoBio** is in which we are intersted.\n\n-   How to immigrate transportation scenario from GCAM-KAIST2.0 to GCAM7?\n\n# 2023-09-05 Meeting\n\n::: callout-important\n-   DAC의 경우는 CO2 sequestration parameter 중요\n\n-   광남에게 transportation 시나리오에 대해 물어보기. 무얼 바꿨고 어떻게 작업했는지. quick seminar 가능?\n\n-   In KAIST2.0 광남, `energy-final-demand name =\"chemical\"` 왜??\n\n-   GCAM-KAIST2.0 광남시나리오 VS GCAM7 기본 TRANSPORTATION 시나리오 비교.\n\n-   DAC의 경우는 CO2 sequestration parameter 중요.\n\n-   github jgcri or GCAM 에 DAC 작동안된다고 문의하기.\n\n-   시나리오가 아주 많을 떄 `library(gcamextractor)` 사용하면 좋고, 현재는 ModelInterface에서 봐도 충분하다.\n\n-   어디를 봐야할 지 모를 때 look at input by sector, output bt sector.\n:::\n\n# 2023-09-07 meeting\n\n::: callout-important\n-   **(DAC)** DAC 기술인 high DAC? 이런 애들은 다른 나라에서는 나타남, Japan, Thailand에서도. 한국에서만 안나타나는거 같음. 결과가 잘 나타나는 국가를 하나 택해서 이름만 바꿔보기. 예를 들어. Japan \\<-\\> Korea\n\n-   (Diff) `1p5-incr-uc-KOR-LUC-Kwangnam.xml` vs `FFI-const-row-deeper-decarb-2050-1p5-6000-Linear.xml` 전자에는`ghgpolicy name = GHG`, 후자에는 `ghgpolicy name = CO2`로 차이가 있음. -\\> 이로 인한 문제?\n\n-   (Diff) `GHG_link_kor.xml` vs `PCT_CO2_LUC_link_p10_row.xml` 차이도 있음.\n\n-   **(Transportation)** ModelInterface에서 `transport final energy by tech and fuel`과 `transport service output by tech` 결과 제시 필요!! GCAM-KAIST2.0 vs GCAM7.0\n\n-   **(Transportation)** `CurPol_Dawoon.xml`과 `transportation_UCD_CORE.xml`의 차이. UCD_CORE에는 `<stub-technology name=\"Hybrid Liquids\">` 가 있는데, 전자에는 없음. `Hybrid Liquids`가 없어서 GCAM7에서 시나리오 돌릴 떄 오류??\n:::\n\n## dac_ssp2랑 dac_ssp_x3 ModelInterface에서 확인하기\n\n::: callout-important\n-   Check dac_ssp2 & dac_ssp2_x3 scenarios results of USA using Modelinterface in GCAM\n-   Selected parameter : `CO2 emission by tech` and `CO2 sequestration by tech`\n-   Drag and drop the resuls in excels\n-   See the differences using R\n-   Differences can be seen in `airCO2` , `CO2 removal`, `process heat dac`, -\\> dac scenario works in USA\n-   /KAIST_IAM_GROUP `dac_scenario_analysis.R` 에서 확인 가능\n:::\n\n-   Region : USA, Query: **CO2 emissions by sector**\n\n![](KAIST_IAM_GROUP/dac_emission_by_sector.png)\n\n-   Region : USA, Query: **CO2 sequestration by sector**\n\n![](KAIST_IAM_GROUP/dac_co2_sequestration_by_sector.png)\n\n## Automation of graph reporting with R library(gcamextractor)\n\n-   Using `library(gcamextractor)`, query data can be imported as dataset in R and saved in excel files. -\\> Details can be found in `Template.R`\n-   User guide for [gcamextractor](https://jgcri.github.io/gcamextractor/articles/vignette_parameters.html) here.\n\n![](KAIST_IAM_GROUP/images_gcamextractor.png)\n\n## 2023-09-12 회의\n\n::: callout-important\n-   에너지통계연보 수치를, R 템플릿 결과에 추가해서 볼 수 있게\n\n-   dac 시나리오 나라 바꿔서 돌려보기 e.g., Korea \\<-\\> USA\n:::\n",
    "supporting": [
      "KAIST_IAM_GROUP_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}