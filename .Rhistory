ggplot()+
geom_col(data = GIR_a, aes(x= year, y = emission, group = type, fill = type))+
geom_line(data = GIR_b, aes(x= year, y = emission),
size = 1,
color = "red",
linetype = 2)+
labs(title = "타이틀",
subtitle = "서브타이틀")+
scale_fill_brewer(palette="Set3")
setwd("C:/R/Rproject/myfirstproject/GIR")
Treemap2019_raw <- read.csv("220110_Treemap_GIR_v2.csv", header=TRUE, fileEncoding = "UTF-8-BOM", check.names=FALSE)
tail(Treemap2019_raw)
str(Treemap2019_raw)
Treemap2019_raw %>%
distinct(type)
str(Treemap2019_raw)
Treemap2019_raw$emission <-gsub(",","", Treemap2019_raw$emission)
Treemap2019_raw$emission <-as.numeric(Treemap2019_raw$emission)
head(Treemap2019_raw)
str(Treemap2019_raw)
library(showtext)
font_add_google("Nanum Gothic", "nanumgothic")
font_add_google("Poor Story", "poorstory")
showtext_auto()
showtext_end()
??showtext
windows()
?treemap
universe |>
e_charts() |>
e_treemap() |>
e_title("Treemap chart")
universe
universe |>
e_charts() |>
e_treemap() |>
e_title("Treemap chart")
df <- tibble(
name = c("earth", "mars", "venus"),
value = c(30, 40, 30),
# 1st level
itemStyle = tibble(color = c(NA, "red", "blue")),
# embedded styles, optional
children = list(
tibble(
name = c("land", "ocean"),
value = c(10, 20),
# 2nd level
children = list(
tibble(name = c("forest", "river"), value = c(3, 7)),
# 3rd level
tibble(
name = c("fish", "kelp"),
value = c(10, 5),
children = list(
tibble(name = c("shark", "tuna"), value = c(2, 6)),
# 4th level
NULL # kelp
)
)
)
),
tibble(name = c("crater", "valley"), value = c(20, 20)),
NULL # venus
)
)
View(df)
head(Treemap2019_raw)
Treemap2019_raw %>%
ggplot(aes(area = percent, fill = type, label = percent ))+
geom_treemap()
svglite(width = 18, height = 9.5, file ='220110_treemap_level1_2019.svg')
treemap(Treemap2019_raw,
index=c("type"),
vSize = "emission",
type="index",
palette = "Set3",
fontsize.labels = c(30),
fontface.labels = c(1),
title = "대한민국 온실가스 총배출량 구분(2019년 기준)",
fontsize.title = 30,
align.labels = list(c("left", "top")),
fontfamily.labels = "nanumgothic",
fontfamily.legend = "nanumgothic",
fontfamily.title = "nanumgothic")
?treemap
dev.off()
head(Treemap2019_raw)
svglite(width = 18, height = 9.5, file ='220110_treemap_level2_2019.svg')
treemap(Treemap2019_raw,
index=c("type","sub1"),
vSize = "emission",
type="index",
palette = "Set3",
fontsize.labels = c(30,20),
fontface.labels = c(4,3,2,1),
title = "대한민국 온실가스 총배출량 구분(2019년 기준)",
fontsize.title = 30,
align.labels = list(c("left", "top"),c("center", "center")),
fontfamily.labels = "nanumgothic",
fontfamily.legend = "nanumgothic",
fontfamily.title = "nanumgothic")
dev.off()
svglite(width = 18, height = 9.5, file ='220110_treemap_level3_2019.svg')
library(treemap)
### 대한민국 온실가스 총배출량 구분(2019년도 기준 )- 구분 1단계
??treemap
library(treemapify)
svglite(width = 18, height = 9.5, file ='220110_treemap_level1_2019.svg')
treemap(Treemap2019_raw,
index=c("type"),
vSize = "emission",
type="index",
palette = "Set3",
fontsize.labels = c(30),
fontface.labels = c(1),
title = "대한민국 온실가스 총배출량 구분(2019년 기준)",
fontsize.title = 30,
align.labels = list(c("left", "top")),
fontfamily.labels = "nanumgothic",
fontfamily.legend = "nanumgothic",
fontfamily.title = "nanumgothic")
?treemap
library(echarts4r)
svglite(width = 18, height = 9.5, file ='220110_treemap_level1_2019.svg')
treemap(Treemap2019_raw,
index=c("type"),
vSize = "emission",
type="index",
palette = "Set3",
fontsize.labels = c(30),
fontface.labels = c(1),
title = "대한민국 온실가스 총배출량 구분(2019년 기준)",
fontsize.title = 30,
align.labels = list(c("left", "top")),
fontfamily.labels = "nanumgothic",
fontfamily.legend = "nanumgothic",
fontfamily.title = "nanumgothic")
library(treemapify)
library(echarts4r)
svglite(width = 18, height = 9.5, file ='220110_treemap_level1_2019.svg')
treemap(Treemap2019_raw,
index=c("type"),
vSize = "emission",
type="index",
palette = "Set3",
fontsize.labels = c(30),
fontface.labels = c(1),
title = "대한민국 온실가스 총배출량 구분(2019년 기준)",
fontsize.title = 30,
align.labels = list(c("left", "top")),
fontfamily.labels = "nanumgothic",
fontfamily.legend = "nanumgothic",
fontfamily.title = "nanumgothic")
library(treemapify)
library(echarts4r)
treemap(Treemap2019_raw,
index=c("type"),
vSize = "emission",
type="index",
palette = "Set3",
fontsize.labels = c(30),
fontface.labels = c(1),
title = "대한민국 온실가스 총배출량 구분(2019년 기준)",
fontsize.title = 30,
align.labels = list(c("left", "top")),
fontfamily.labels = "nanumgothic",
fontfamily.legend = "nanumgothic",
fontfamily.title = "nanumgothic")
?treemap
dev.off()
head(Treemap2019_raw)
svglite(width = 18, height = 9.5, file ='220110_treemap_level2_2019.svg')
treemap(Treemap2019_raw,
index=c("type","sub1","sub2"),
vSize = "emission",
type="index",
palette = "Set3",
fontsize.labels = c(40,30,20),
fontface.labels = c(4,3,2,1),
title = "대한민국 온실가스 총배출량 구분(2019년 기준)",
fontsize.title = 30,
align.labels = list(c("left", "top"),c("center", "center"), c("center", "center"), c("right", "bottom")),
fontfamily.labels = "nanumgothic",
fontfamily.legend = "nanumgothic",
fontfamily.title = "nanumgothic")
??treemap
svglite(width = 4, height = 30, file ='220125_treemap_level3_2019_MOBILE.svg')
treemap(Treemap2019_raw,
index=c("type","sub1","sub2"),
vSize = "emission",
type="index",
palette = "Set3",
fontsize.labels = c(25,10,10),
fontface.labels = c(4,3,2,1),
title = "대한민국 온실가스 총배출량 구분(2019년 기준)",
fontsize.title = 30,
align.labels = list(c("left", "top"),c("center", "center"), c("center", "center"), c("right", "bottom")),
fontfamily.labels = "nanumgothic",
fontfamily.legend = "nanumgothic",
fontfamily.title = "nanumgothic")
dev.off()
svglite(width = 18, height = 9.5, file ='220110_treemap_level4_2019.svg')
treemap(Treemap2019_raw,
index=c("type","sub1","sub2", "sub3"),
vSize = "emission",
type="index",
palette = "Set3",
fontsize.labels = c(40,30,20, 20),
fontcolor.labels = c("black", "purple", "blue", "white"),
fontface.labels = c(2,3,1,1),
title = "대한민국 온실가스 총배출량 구분(2019년 기준)",
fontsize.title = 30,
align.labels = list(c("left", "top"),c("center", "center"), c("right", "center"), c("right", "bottom")),
fontfamily.labels = "nanumgothic",
fontfamily.legend = "nanumgothic",
fontfamily.title = "nanumgothic")
dev.off()
install.packages("plotly")
install.packages("plotly")
Treemap2018v2_raw <- read.csv("211129_Treemap_GIR_v2.csv", header=TRUE, fileEncoding = "UTF-8-BOM", check.names=FALSE)
View(Treemap2018v2_raw)
str(Treemap2018v2_raw)
Treemap2018v2_raw$emission <-gsub(",","", Treemap2018v2_raw$emission)
Treemap2018v2_raw$emission <-as.numeric(Treemap2018v2_raw$emission)
View(Treemap2018v2_raw)
Treemap2018v2_total <- Treemap2018v2_raw
Treemap2018v2_total$emission <-gsub(",","", Treemap2018v2_total$emission)
Treemap2018v2_total$emission <-as.numeric(Treemap2018v2_total$emission)
library(treemap)
install.packages("treemap")
library(treemap)
library(svglite)
svglite(width = 18, height = 30, file ='treemap3.svg')
Treemap2018v2_total<- as.data.frame(Treemap2018v2_total)
head(Treemap2018v2_total)
str(Treemap2018v2_total)
svg(width = 15, height = 9, file ='jiseoktreemap_height9.svg')
treemap(Treemap2018v2_total,
index=c("type"),
vSize = "emission",
type="index",
palette = "Set3",
fontsize.labels = c(30,20,20, 20),
fontcolor.labels = c("black", "purple", "blue", "white"),
fontface.labels = c(2,3,1,1),
title = "대한민국 온실가스 총배출량 구분(2018년 기준)",
fontsize.title = 30,
align.labels = list(c("left", "top"),c("center", "center"), c("right", "center"), c("right", "bottom")),
fontfamily.labels = "nanumgothic",
fontfamily.legend = "nanumgothic",
fontfamily.title = "nanumgothic",
lowerbound.cex.labels = 0)
treemap(Treemap2018v2_total,
index=c("type"),
vSize = "emission",
type="index",
palette = "Set3",
fontsize.labels = c(30,20,20, 20),
fontcolor.labels = c("black", "purple", "blue", "white"),
fontface.labels = c(2,3,1,1),
title = "대한민국 온실가스 총배출량 구분(2018년 기준)",
fontsize.title = 30,
align.labels = list(c("left", "top"),c("center", "center"), c("right", "center"), c("right", "bottom")),
fontfamily.labels = "nanumgothic",
fontfamily.legend = "nanumgothic",
fontfamily.title = "nanumgothic",
lowerbound.cex.labels = 0)
dev.off()
install.packages("ggfittext")
library(ggfittext)
png(width = 1400, height = 3008, file ='jiseoktreemap_height3000.png')
treemap(Treemap2018v2_total,
index=c("type","sub1","sub2", "sub3"),
vSize = "emission",
type="index",
palette = "Set3",
fontsize.labels = c(30,20,20, 20),
fontcolor.labels = c("black", "purple", "blue", "white"),
fontface.labels = c(2,3,1,1),
title = "대한민국 온실가스 총배출량 구분(2018년 기준)",
fontsize.title = 50,
align.labels = list(c("left", "top"),c("center", "center"), c("right", "center"), c("right", "bottom")),
fontfamily.labels = "nanumgothic",
fontfamily.legend = "nanumgothic",
fontfamily.title = "nanumgothic",
lowerbound.cex.labels = 0)
treemap(Treemap2018v2_total,
index=c("type","sub1","sub2", "sub3"),
vSize = "emission",
type="index",
palette = "Set3",
fontsize.labels = c(30,20,20, 20),
fontcolor.labels = c("black", "purple", "blue", "white"),
fontface.labels = c(2,3,1,1),
title = "대한민국 온실가스 총배출량 구분(2018년 기준)",
fontsize.title = 50,
align.labels = list(c("left", "top"),c("center", "center"), c("right", "center"), c("right", "bottom")),
fontfamily.labels = "nanumgothic",
fontfamily.legend = "nanumgothic",
fontfamily.title = "nanumgothic",
lowerbound.cex.labels = 0)
svglite(width = 18, height = 9.5, file ='220110_treemap_level2_2019.svg')
treemap(Treemap2019_raw,
index=c("type","sub1"),
vSize = "emission",
type="index",
palette = "Set3",
fontsize.labels = c(30,20),
fontface.labels = c(4,3,2,1),
title = "대한민국 온실가스 총배출량 구분(2019년 기준)",
fontsize.title = 30,
align.labels = list(c("left", "top"),c("center", "center")),
fontfamily.labels = "nanumgothic",
fontfamily.legend = "nanumgothic",
fontfamily.title = "nanumgothic")
head(Treemap2019_raw)
Treemap2019_raw %>%
ggplot(aes(area = percent, fill = type, label = percent ))+
geom_treemap()
library(tidyverse)
library(RColorBrewer)
library(treemapify)
library(treemap)
Treemap2019_raw %>%
ggplot(aes(area = percent, fill = type, label = percent ))+
geom_treemap()
### 대한민국 온실가스 총배출량 구분(2019년도 기준 )- 구분 1단계
??treemap
library(treemapify)
library(echarts4r)
svglite(width = 18, height = 9.5, file ='220110_treemap_level1_2019.svg')
treemap(Treemap2019_raw,
index=c("type"),
vSize = "emission",
type="index",
palette = "Set3",
fontsize.labels = c(30),
fontface.labels = c(1),
title = "대한민국 온실가스 총배출량 구분(2019년 기준)",
fontsize.title = 30,
align.labels = list(c("left", "top")),
fontfamily.labels = "nanumgothic",
fontfamily.legend = "nanumgothic",
fontfamily.title = "nanumgothic")
dev.off()
svglite(width = 18, height = 9.5, file ='220110_treemap_level2_2019.svg')
treemap(Treemap2019_raw,
index=c("type","sub1"),
vSize = "emission",
type="index",
palette = "Set3",
fontsize.labels = c(30,20),
fontface.labels = c(4,3,2,1),
title = "대한민국 온실가스 총배출량 구분(2019년 기준)",
fontsize.title = 30,
align.labels = list(c("left", "top"),c("center", "center")),
fontfamily.labels = "nanumgothic",
fontfamily.legend = "nanumgothic",
fontfamily.title = "nanumgothic")
dev.off()
library(sf)
library(tigris)
library(tidyverse)
setwd("C:/R/Rproject/myfirstproject/230109_Rayshader_South Korea")
## load kontour data
data <- st_read("kontur_population_US_20220630.gpkg")
st<- states()
florida <- st %>%
filter( NAME =="Florida") %>%
st_transform(crs = st_crs(data))
bb<- st_bbox(st_florida)
st_florida <- st_intersection(data, florida)
bb<- st_bbox(st_florida)
bb
library(tidyverse)
library(RColorBrewer)
library(scales)
library(lubridate)
library(ggh4x)
library(plotly)
library(zoo)
library(extrafont)
library(showtext)
library(gghighlight)
library(echarts4r)
library(ggh4x)
library(gganimate)
library(babynames)
library(hrbrthemes)
library(viridis)
library(calendR)
library(sugrrants)
library(ggrepel)
library(ggExtra)
library(gghighlight)
library(ggiraph)
library(treemapify)
library(patchwork)
library(knitr)
library(kableExtra)
options(digits=2)
options (scipen = 999)
############ 한글 폰트 꺠짐 해별 방법
showtext_auto(enable = TRUE, record = TRUE)
theme_set(theme_bw(base_family='nanumgothic'))
font_add_google(name =  'Nanum Gothic Coding',
family = 'Nanum Gothic Coding' )
showtext_auto(TRUE)
setwd("C:/R/Rproject/myfirstproject/221013_NGMS_2021_data")
NGMS.2021.raw<-read_excel("221013_NGMS_2021_data.xlsx", sheet= 3) %>%
select(-number, -year)
library(readxl)
setwd("C:/R/Rproject/myfirstproject/221013_NGMS_2021_data")
NGMS.2021.raw<-read_excel("221013_NGMS_2021_data.xlsx", sheet= 3) %>%
select(-number, -year)
head(NGMS.2021.raw)
View(NGMS.2021.raw)
NGMS.2021.raw
unique(NGMS.2021.raw$type1)
unique(NGMS.2021.raw$sector)
unique(NGMS.2021.raw$jijung)
unique(NGMS.2021.raw$planned)
NGMS.2021.raw %>%
filter(sector =="산업") %>%
distinct(planned)
NGMS.2021.raw %>%
filter(sector =="전환") %>%
distinct(planned)
NGMS.2021.raw %>%
group_by(sector) %>%
summarise(sum_tCO2 = sum(tCO2),
count =n(),
avg = sum_tCO2/count) %>%
arrange(desc(sum_tCO2)) %>%
ggplot(aes(x = fct_reorder(sector, sum_tCO2), y = sum_tCO2))+
geom_bar(stat="identity")+
coord_flip()
NGMS.2021.raw %>%
filter(sector =="산업") %>%
group_by(planned) %>%
summarise(sum_tCO2 = sum(tCO2),
count =n(),
avg = sum_tCO2/count) %>%
mutate(sector_total_pct = sum_tCO2/sum(sum_tCO2)*100) %>%
arrange(desc(sum_tCO2)) %>%
slice(1:15) %>%
ggplot(aes(x = fct_reorder(planned, sum_tCO2), y = sum_tCO2))+
scale_y_continuous(labels = comma, limits = c(0,1.5e8))+
geom_bar(stat="identity")+
geom_text(aes(label = paste0( round(sector_total_pct,1), "%")), hjust = -1) +
coord_flip()
head(NGMS.2021.raw)
NGMS.2021.raw %>%
group_by(sector) %>%
summarise(sum_MtCO2 = sum(tCO2)/1000000,
count =n(),
avg = sum_tCO2/count) %>%
arrange(desc(sum_tCO2)) %>%
ggplot(aes(x = fct_reorder(sector, sum_tCO2), y = sum_tCO2))+
geom_bar(stat="identity")+
coord_flip()
NGMS.2021.raw %>%
group_by(sector) %>%
summarise(sum_tCO2 = sum(tCO2),
count =n(),
avg = sum_tCO2/count) %>%
arrange(desc(sum_tCO2)) %>%
ggplot(aes(x = fct_reorder(sector, sum_tCO2), y = sum_tCO2))+
geom_bar(stat="identity")+
coord_flip()
NGMS.2021.raw %>%
group_by(sector) %>%
summarise(sum_tCO2 = sum(tCO2)/1000000,
count =n(),
avg = sum_tCO2/count) %>%
arrange(desc(sum_tCO2)) %>%
ggplot(aes(x = fct_reorder(sector, sum_tCO2), y = sum_tCO2))+
geom_bar(stat="identity")+
coord_flip()
NGMS.2021.raw %>%
group_by(sector) %>%
summarise(sum_tCO2 = sum(tCO2)/1000000,
count =n(),
avg = sum_tCO2/count) %>%
arrange(desc(sum_tCO2)) %>%
ggplot(aes(x = fct_reorder(sector, sum_tCO2), y = sum_tCO2))+
geom_bar(stat="identity")+
coord_flip()
NGMS.2021.raw %>%
group_by(sector) %>%
summarise(sum_tCO2 = sum(tCO2),
count =n(),
avg = sum_tCO2/count) %>%
arrange(desc(sum_tCO2)) %>%
ggplot(aes(x = fct_reorder(sector, sum_tCO2), y = sum_tCO2))+
geom_bar(stat="identity")+
coord_flip()
library(ggthemer)
install.packages("ggthemr")
devtools::install_github('Mikata-Project/ggthemr')
library(ggthemer)
devtools::install_github('Mikata-Project/ggthemr')
devtools::install_github('Mikata-Project/ggthemr', force =TRUE)
library(gcamextractor)
library(gcamextractor)
gcamextractor::params # view available parameters
gcamextractor::queries # Get all queries used
gcamextractor::map_param_query # Get a table of params and the relevants queries used to extract and calculate them.
gcamextractor::params # view available parameters
gcamextractor::queries # Get all queries used
gcamextractor::map_param_query # Get a table of params and the relevants queries used to extract and calculate them.
