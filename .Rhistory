`2030` = c(9.461572644, 9.330508359),
`2035` = c(9.522384587, 9.402758768),
`2040` = c(9.453087547, 9.357385019),
`2045` = c(9.322865369, 9.22499561),
`2050` = c(9.074813488, 9.025688666),
`2055` = c(8.757253928, 8.769109901),
`2060` = c(8.280716309, 8.460735619),
`2065` = c(7.887725258, 8.127873817),
`2070` = c(7.492689793, 7.790472261),
`2075` = c(7.13839849, 7.462691223),
`2080` = c(6.808850659, 7.175058187),
`2085` = c(6.497077989, 6.899124992),
`2090` = c(6.197903885, 6.639073591),
`2095` = c(5.909714511, 6.389948054),
`2100` = c(5.632034763, 6.145750802)
)%>% pivot_longer(-scenario, values_to = "EJ", names_to = "year") %>%
mutate(year = as.numeric(year))
library(tidyverse)
total_final_energy %>%
ggplot(aes( x = year, y = EJ, group = scenario))
total_final_energy %>%
ggplot(aes( x = year, y = EJ, group = scenario))+
geom_line()
total_final_energy %>%
ggplot(aes( x = year, y = EJ, group = scenario, color = scenario))+
geom_line()
total_final_energy %>%
ggplot(aes( x = year, y = EJ, group = scenario, color = scenario))+
geom_line()+
theme_bw()+
geom_vline(xintercept = 2050, linetype = "dotted")+
#theme_minimal()+
theme(plot.title = element_text(size = 20, face ="bold"),
strip.text.x  = element_text(size=14),
axis.text.x = element_text(size =12),
axis.text.y = element_text(size =16),
axis.title = element_text(size =16),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
# panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title.position =  "plot",
legend.text = element_text(size = 16),
legend.title = element_text(size = 16),
plot.subtitle = element_text(size = 16))+
labs(title = paste("Parameter:", "emissGHGBySectorGWPAR5"),
x = "year",
y = "GHG emissions(MTCO2eq)")
total_final_energy %>%
ggplot(aes( x = year, y = EJ, group = scenario, color = scenario))+
geom_line()+
theme_bw()+
geom_vline(xintercept = 2050, linetype = "dotted")+
#theme_minimal()+
theme(plot.title = element_text(size = 20, face ="bold"),
strip.text.x  = element_text(size=14),
axis.text.x = element_text(size =12),
axis.text.y = element_text(size =16),
axis.title = element_text(size =16),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
# panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title.position =  "plot",
legend.text = element_text(size = 16),
legend.title = element_text(size = 16),
plot.subtitle = element_text(size = 16))+
labs(title = paste("Parameter:", "Total final energy by region"),
x = "year",
y = "EJ")
imageclipr:::config()
library(gcamextractor)
library(rchart)
library(rmap)
library(dplyr)
library(ggplot2)
library(gghighlight)
library(scales)
library(ggthemes)
options(scipen =999)
getwd()
setwd("C:/R/Rproject/jiseok_personal/KAIST_IAM_GROUP")
### list 파일 만지고 놀기 R리스트 완전정복(슬기로운 통계생활)
class(dac_cstorage)
setwd("C:/R/Rproject/jiseok_personal/KAIST_IAM_GROUP")
### Import NZ2050
dac_cstorage<- gcamextractor::readgcam(gcamdatabase = "E:/gcam-v7.0-Windows-Release-Package/output/cstorage_dac",
paramsSelect = c(#"energy" ## energy 오류 남
"electricity",
"transport",
"building",
"emissions",
"hydrogen",
"energyPrimaryByFuelEJ",
"energyPrimaryRefLiqProdEJ",
"energyFinalConsumBySecEJ",
"energyFinalByFuelEJ",
"energyFinalSubsecByFuelTranspEJ",
"energyFinalSubsecByFuelBuildEJ",
"energyFinalSubsecByFuelIndusEJ",
"energyFinalSubsecBySectorBuildEJ",
"energyPrimaryByFuelMTOE",
"energyPrimaryRefLiqProdMTOE",
"energyFinalConsumBySecMTOE",
"energyFinalbyFuelMTOE",
"energyFinalSubsecByFuelTranspMTOE",
"energyFinalSubsecByFuelBuildMTOE",
"energyFinalSubsecByFuelIndusMTOE",
"energyFinalSubsecBySectorBuildMTOE",
"energyPrimaryByFuelTWh",
"energyPrimaryRefLiqProdTWh",
"energyFinalConsumBySecTWh",
"energyFinalbyFuelTWh",
"energyFinalSubsecByFuelTranspTWh",
"energyFinalSubsecByFuelBuildTWh",
"energyFinalSubsecByFuelIndusTWh",
"energyFinalSubsecBySectorBuildTWh"
), ### this is a key
regionsSelect = c("South Korea", "Japan"),
folder = "gcamextractor/dac_cstorage")
gcamextractor::params # view available parameters
gcamextractor::queries # Get all queries used
gcamextractor::map_param_query # Get a table of params and the relevants queries used to extract and calculate them.
### list 파일 만지고 놀기 R리스트 완전정복(슬기로운 통계생활)
class(dac_cstorage)
library(RColorBrewer)
NZ2050#
dac_cstorage
### CO2 sequestration by sector --> NA
dac_cstorage<- dac_cstorage$dataAll %>%
mutate(param = ifelse(is.na(param),origQuery, param))
getwd()
library(stringr)
dac_cstorage_Extended<- read.csv("./gcamextractor/dac_cstorage/gcamDataTable_Extended.csv") %>%
mutate(scenario = ifelse(str_detect(scenario, "cstorage"), "dac+cstorage", "dac"),
param = ifelse(is.na(param),origQuery, param))
dac_cstorage_Extended %>% View()
decarb_two_regions$dataAll %>%
filter(region %in% c('South Korea', 'Japan') & param == "emissCO2BySectorNoBio") %>%
distinct(units)
decarb_two_regions$dataAll %>%
filter(region %in% c('South Korea', 'Japan') & param == "emissCO2BySectorNoBio") %>%
ggplot(aes(x = x, y = value, group = region, color = region))+
geom_line()+
facet_grid(scenario~class1)+
theme_bw()+
#theme_minimal()+
theme(plot.title = element_text(size = 20, face ="bold"),
strip.text.x  = element_text(size=12),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
# panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title.position =  "plot")+
labs(title = "CO2 emissions - (MTCO2)",
subtitle = paste("Parameter:", "emissCO2BySectorNoBio"),
x = "year",
y = " CO2 emissions - (MTCO2)")
dac_cstorage_Extended<- read.csv("./gcamextractor/dac_cstorage/gcamDataTable_Extended.csv") %>%
mutate(scenario = ifelse(str_detect(scenario, "cstorage"), "dac+cstorage", "dac"),
param = ifelse(is.na(param),origQuery, param))
dac_cstorage_Extended %>% View()
head(dac_cstorage_Extended)
###Count unique values for every column
apply(dac_cstorage_Extended, 2, function(x) length(unique(x)))
unique(dac_cstorage_Extended$origScen)
str(dac_cstorage)
##What's in parameter
unique(dac_cstorage_Extended$param)
dac_cstorage_Extended %>%
filter(is.na(param))
unique(dac_cstorage_Extended$param)
unique(dac_cstorage_Extended$param)[15] -> param_selected
param_selected
dac_cstorage_Extended %>%
filter(param == param_selected) %>%
distinct(units)->unit_param_selected
unit_param_selected
dac_cstorage_Extended %>%
filter(param == param_selected) %>%
distinct(origQuery) ->origQuery
origQuery
dac_cstorage_Extended %>%
filter(param == param_selected & x >= 2015) %>%
group_by(x, scenario, sector, region) %>%
summarise(value = sum(value)) %>%
ggplot(aes(x = x, y = value, group = sector, fill = sector))+
geom_bar(stat='identity')+
# scale_fill_brewer(palette="Set1")+
scale_x_continuous(limits = c(2010, 2100), breaks = c(2015, 2050, 2100))+
facet_grid(region~scenario)+
geom_text(aes(label = round(after_stat(y), 0), group = x),
stat = 'summary', fun = sum, vjust = 1.3)+
theme_bw()+
theme(plot.title = element_text(size = 16),
strip.text.x  = element_text(size=12),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
# panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title.position =  "plot")+
labs(title = paste("OriginQuery:", origQuery),
fill ="구분",
x = "연도",
y = unit_param_selected)
dac_cstorage_Extended %>%
filter(param == param_selected & x >= 2015) %>%
group_by(x, scenario, sector, region) %>%
summarise(value = sum(value)) %>%
ggplot(aes(x = x, y = value, group = sector, color = sector))+
geom_line()+
scale_x_continuous(limits = c(2010, 2100), breaks = c(2015, 2050, 2100))+
facet_wrap(region~scenario)+
#gghighlight(sector =="process heat dac")+
theme_bw()+
theme_minimal()+
theme(plot.title = element_text(size = 16),
strip.text.x  = element_text(size=12),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
# panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title.position =  "plot")+
labs(title = paste("Parameter:", unit_param_selected, "\nOriginQuery:", origQuery),
fill ="구분",
x = "연도",
y = unit_param_selected)
dac_cstorage_Extended %>%
filter(param == param_selected & x >= 2015) %>%
group_by(x, scenario, sector, region) %>%
summarise(value = sum(value)) %>%
ggplot(aes(x = x, y = value, group = sector, color = sector))+
geom_line()+
scale_x_continuous(limits = c(2010, 2100), breaks = c(2015, 2050, 2100))+
facet_wrap(region~scenario)+
#gghighlight(sector =="process heat dac")+
theme_bw()+
theme_minimal()+
theme(plot.title = element_text(size = 16),
strip.text.x  = element_text(size=12),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
# panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title.position =  "plot")+
labs(title = paste("Parameter:", unit_param_selected, "\nOriginQuery:", origQuery),
fill ="구분",
x = "연도",
y = unit_param_selected)
dac_cstorage_Extended %>%
filter(param == param_selected & x >= 2015 & region =="South Korea") %>%
group_by(x, scenario, sector) %>%
summarise(value = sum(value)) %>%
ggplot(aes(x = x, y = value, group = scenario, color = scenario))+
geom_line(linewidth = 1)+
scale_x_continuous(limits = c(2010, 2100), breaks = c(2015, 2050, 2100))+
facet_wrap(~sector, ncol = 3)+
#gghighlight(sector =="process heat dac")+
theme_bw()+
theme(plot.title = element_text(size = 24),
strip.text.x  = element_text(size=14),
axis.title = element_text(size = 14),
axis.text = element_text(size = 14),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
# panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title.position =  "plot",
legend.title = element_text(size = 16),
legend.text = element_text(size = 14))+
labs(title = paste( "OriginQuery:", origQuery, "\nRegion: South Korea"),
fill ="구분",
x = "연도",
y = unit_param_selected)
dac_cstorage_Extended %>%
filter(param == param_selected) %>%
distinct(origQuery) ->origQuery
origQuery
## unit은 GHG emissions
dac_cstorage_Extended %>%
filter(param == param_selected) %>%
distinct(units)
### value(CO2eq) = origValue * coefficient
## coefficient 확인 가능
dac_cstorage_Extended %>%
filter(param == param_selected) %>%
mutate(coefficient = value/origValue) %>%
relocate(coefficient)
dac_cstorage_Extended %>%
filter(param == param_selected & x >= 2015) %>%
group_by(x, class1, scenario, region,
#origQuery
) %>%
summarise(value = sum(value)) %>%
ungroup() %>%
group_by(x,scenario) %>%
mutate(net = sum(value)) %>%
ggplot(aes(x = x, y = value, group = class1, fill = class1))+
geom_bar(stat='identity')+
#  scale_fill_brewer(palette="Set1")+
scale_x_continuous(limits = c(2010, 2055), breaks = seq(2015, 2050, 5))+
#   scale_y_continuous(labels = comma, limits= c(0, 1200), breaks = seq(0, 1200, 200))+
geom_text(aes(label = round(after_stat(y), 0), group = x),
stat = 'summary', fun = sum, vjust = -1)+
facet_wrap(region~scenario)+
theme_bw()+
theme_minimal()+
theme(plot.title = element_text(size = 16),
strip.text.x  = element_text(size=12),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
# panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title.position =  "plot")+
labs(title = paste("Parameter:", unit_param_selected, "\nOriginQuery:", origQuery),
fill ="구분",
x = "연도",
y = unit_param_selected)
unique(dac_cstorage_Extended$param)
unique(dac_cstorage_Extended$param)[19] -> param_selected
param_selected
dac_cstorage_Extended %>%
filter(param == param_selected) %>%
distinct(units)->unit_param_selected
unit_param_selected
dac_cstorage_Extended %>%
filter(param == param_selected) %>%
distinct(origQuery) ->origQuery
origQuery
## unit은 GHG emissions
dac_cstorage_Extended %>%
filter(param == param_selected) %>%
distinct(units)
### value(CO2eq) = origValue * coefficient
## coefficient 확인 가능
dac_cstorage_Extended %>%
filter(param == param_selected) %>%
mutate(coefficient = value/origValue) %>%
relocate(coefficient)
### value(CO2eq) = origValue * coefficient
## coefficient 확인 가능
dac_cstorage_Extended %>%
filter(param == param_selected) %>%
mutate(coefficient = value/origValue) %>%
relocate(coefficient)
dac_cstorage_Extended %>%
filter(param == param_selected & x >= 2015) %>%
group_by(x, class1, scenario, region,
#origQuery
) %>%
summarise(value = sum(value)) %>%
ungroup() %>%
group_by(x,scenario) %>%
mutate(net = sum(value)) %>%
ggplot(aes(x = x, y = value, group = class1, fill = class1))+
geom_bar(stat='identity')+
#  scale_fill_brewer(palette="Set1")+
scale_x_continuous(limits = c(2010, 2055), breaks = seq(2015, 2050, 5))+
#   scale_y_continuous(labels = comma, limits= c(0, 1200), breaks = seq(0, 1200, 200))+
geom_text(aes(label = round(after_stat(y), 0), group = x),
stat = 'summary', fun = sum, vjust = -1)+
facet_wrap(region~scenario)+
theme_bw()+
theme_minimal()+
theme(plot.title = element_text(size = 16),
strip.text.x  = element_text(size=12),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
# panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title.position =  "plot")+
labs(title = paste("Parameter:", unit_param_selected, "\nOriginQuery:", origQuery),
fill ="구분",
x = "연도",
y = unit_param_selected)
unique(dac_cstorage_Extended$param)
unique(dac_cstorage_Extended$param)[15] -> param_selected
param_selected
dac_cstorage_Extended %>%
filter(param == param_selected) %>%
distinct(units)->unit_param_selected
unit_param_selected
dac_cstorage_Extended %>%
filter(param == param_selected) %>%
distinct(origQuery) ->origQuery
origQuery
dac_cstorage_Extended %>%
filter(param == param_selected & x >= 2015) %>%
group_by(x, scenario, sector, region) %>%
summarise(value = sum(value)) %>%
ggplot(aes(x = x, y = value, group = sector, fill = sector))+
geom_bar(stat='identity')+
# scale_fill_brewer(palette="Set1")+
scale_x_continuous(limits = c(2010, 2100), breaks = c(2015, 2050, 2100))+
facet_grid(region~scenario)+
geom_text(aes(label = round(after_stat(y), 0), group = x),
stat = 'summary', fun = sum, vjust = 1.3)+
theme_bw()+
theme(plot.title = element_text(size = 16),
strip.text.x  = element_text(size=12),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
# panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title.position =  "plot")+
labs(title = paste("OriginQuery:", origQuery),
fill ="구분",
x = "연도",
y = unit_param_selected)
dac_cstorage_Extended %>%
filter(param == param_selected & x >= 2015) %>%
group_by(x, scenario, sector, region) %>%
summarise(value = sum(value)) %>%
ggplot(aes(x = x, y = value, group = sector, color = sector))+
geom_line()+
scale_x_continuous(limits = c(2010, 2100), breaks = c(2015, 2050, 2100))+
facet_wrap(region~scenario)+
#gghighlight(sector =="process heat dac")+
theme_bw()+
theme_minimal()+
theme(plot.title = element_text(size = 16),
strip.text.x  = element_text(size=12),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
# panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title.position =  "plot")+
labs(title = paste("Parameter:", unit_param_selected, "\nOriginQuery:", origQuery),
fill ="구분",
x = "연도",
y = unit_param_selected)
dac_cstorage_Extended %>%
filter(param == param_selected & x >= 2015 & x <= 2050) %>%
group_by(x, scenario, sector, region) %>%
summarise(value = sum(value)) %>%
ggplot(aes(x = x, y = value, group = sector, fill = sector))+
geom_bar(stat='identity')+
# scale_fill_brewer(palette="Set1")+
scale_x_continuous(limits = c(2010, 2100), breaks = c(2015, 2050, 2100))+
facet_grid(region~scenario)+
geom_text(aes(label = round(after_stat(y), 0), group = x),
stat = 'summary', fun = sum, vjust = 1.3)+
theme_bw()+
theme(plot.title = element_text(size = 16),
strip.text.x  = element_text(size=12),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
# panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title.position =  "plot")+
labs(title = paste("OriginQuery:", origQuery),
fill ="구분",
x = "연도",
y = unit_param_selected)
dac_cstorage_Extended %>%
filter(param == param_selected & x >= 2015 & x <= 2050) %>%
group_by(x, scenario, sector, region) %>%
summarise(value = sum(value)) %>%
ggplot(aes(x = x, y = value, group = sector, color = sector))+
geom_line()+
scale_x_continuous(limits = c(2010, 2100), breaks = c(2015, 2050, 2100))+
facet_wrap(region~scenario)+
#gghighlight(sector =="process heat dac")+
theme_bw()+
theme_minimal()+
theme(plot.title = element_text(size = 16),
strip.text.x  = element_text(size=12),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
# panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title.position =  "plot")+
labs(title = paste("Parameter:", unit_param_selected, "\nOriginQuery:", origQuery),
fill ="구분",
x = "연도",
y = unit_param_selected)
dac_cstorage_Extended %>%
filter(param == param_selected & x >= 2015 ) %>%
group_by(x, scenario, sector, region) %>%
summarise(value = sum(value)) %>%
ggplot(aes(x = x, y = value, group = sector, color = sector))+
geom_line()+
scale_x_continuous(limits = c(2010, 2100), breaks = c(2015, 2050, 2100))+
facet_wrap(region~scenario)+
#gghighlight(sector =="process heat dac")+
theme_bw()+
theme_minimal()+
theme(plot.title = element_text(size = 16),
strip.text.x  = element_text(size=12),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
# panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title.position =  "plot")+
labs(title = paste("Parameter:", unit_param_selected, "\nOriginQuery:", origQuery),
fill ="구분",
x = "연도",
y = unit_param_selected)
