#"transport",
#"building",
"emissions"
#"hydrogen"
), ### this is a key
regionsSelect = c("South Korea"),
scenOrigNames = c("cap"),
folder = "gcamextractor/GGS621_cap_tax")
GGS621_cap_tax
### Import NZ2050
GGS621_cap_tax <- gcamextractor::readgcam(gcamdatabase = "E:/gcam-v7.0-Windows-Release-Package_GGS621/output/database_basexdb",
paramsSelect = c(#"energy"
#"electricity",
#"transport",
#"building",
"emissions"
#"hydrogen"
), ### this is a key
regionsSelect = c("South Korea"),
folder = "gcamextractor/GGS621_cap_tax")
GGS621_cap_tax
GGS621_cap_tax
GGS621_cap_tax$dataAll
unique(GGS621_cap_tax$dataAll)
GGS_621_data<- GGS621_cap_tax$dataAll
##What's in parameter
unique(GGS_621_data$param)
GGS_621_data<- GGS621_cap_tax$dataAll %>%
mutate(param = ifelse(is.na(param), 'CO2 sequestration by sector', param))
unique(GGS621_cap_tax$dataAll)
##What's in parameter
unique(GGS_621_data$param)
unique(GGS_621_data$param)
unique(GGS_621_data$param)[1] -> param_selected
unique(GGS_621_data$param)[1] -> param_selected
param_selected
GGS_621_data %>%
filter(param == param_selected) %>%
distinct(units)->unit_param_selected
unit_param_selected
GGS_621_data %>%
filter(param == param_selected) %>%
distinct(origQuery) ->origQuery
origQuery
GGS_621_data %>%
filter(param == param_selected & x >= 2015) %>%
group_by(x, class1, scenario, origQuery) %>%
summarise(value = sum(value)) %>%
ggplot(aes(x = x, y = value, group = class1, fill = class1))+
geom_bar(stat='identity')+
scale_fill_brewer(palette="Set1")+
scale_x_continuous(limits = c(2010, 2055), breaks = seq(2015, 2050, 5))+
scale_y_continuous(labels = comma, limits= c(0, 1200), breaks = seq(0, 1200, 200))+
geom_text(aes(label = round(after_stat(y), 0), group = x),
stat = 'summary', fun = sum, vjust = -1)+
facet_wrap(~scenario)+
theme_bw()+
theme_minimal()+
theme(plot.title = element_text(size = 16),
strip.text.x  = element_text(size=12),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
# panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title.position =  "plot")+
labs(title = paste("Parameter:", unit_param_selected, "\nOriginQuery:", origQuery),
fill ="구분",
x = "연도",
y = unit_param_selected)
##What's in parameter
unique(GGS_621_data$param)
unique(GGS_621_data$param)
unique(GGS_621_data$param)[1] -> param_selected
unique(GGS_621_data$param)[2] -> param_selected
param_selected
GGS_621_data %>%
filter(param == param_selected) %>%
distinct(units)->unit_param_selected
library(gcamextractor)
library(rchart)
library(rmap)
library(dplyr)
library(ggplot2)
library(gghighlight)
library(scales)
library(ggthemes)
options(scipen =999)
GGS_621_data %>%
filter(param == param_selected) %>%
distinct(units)->unit_param_selected
unit_param_selected
GGS_621_data %>%
filter(param == param_selected) %>%
distinct(origQuery) ->origQuery
origQuery
GGS_621_data %>%
filter(param == param_selected & x >= 2015) %>%
group_by(x, class1, scenario, origQuery) %>%
summarise(value = sum(value)) %>%
ggplot(aes(x = x, y = value, group = class1, fill = class1))+
geom_bar(stat='identity')+
scale_fill_brewer(palette="Set1")+
scale_x_continuous(limits = c(2010, 2055), breaks = seq(2015, 2050, 5))+
scale_y_continuous(labels = comma, limits= c(0, 1200), breaks = seq(0, 1200, 200))+
geom_text(aes(label = round(after_stat(y), 0), group = x),
stat = 'summary', fun = sum, vjust = -1)+
facet_wrap(~scenario)+
theme_bw()+
theme_minimal()+
theme(plot.title = element_text(size = 16),
strip.text.x  = element_text(size=12),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
# panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title.position =  "plot")+
labs(title = paste("Parameter:", unit_param_selected, "\nOriginQuery:", origQuery),
fill ="구분",
x = "연도",
y = unit_param_selected)
unique(GGS_621_data$param)
unique(GGS_621_data$param)[25] -> param_selected
param_selected
GGS_621_data %>%
filter(param == param_selected) %>%
distinct(units)->unit_param_selected
unique(GGS_621_data$param)
unique(GGS_621_data$param)[2] -> param_selected
param_selected
GGS_621_data %>%
filter(param == param_selected) %>%
distinct(units)->unit_param_selected
unit_param_selected
GGS_621_data %>%
filter(param == param_selected) %>%
distinct(origQuery) ->origQuery
origQuery
GGS_621_data %>%
filter(param == param_selected & x >= 2015) %>%
#group_by(x, class1, scenario, origQuery) %>%
#summarise(value = sum(value)) %>%
ggplot(aes(x = x, y = value,
group = sector, fill = sector
))+
geom_bar(stat='identity')+
# scale_fill_brewer(palette="Set1")+
scale_x_continuous(limits = c(2010, 2055), breaks = seq(2015, 2050, 5))+
#  scale_y_continuous(labels = comma, limits= c(0, 1200), breaks = seq(0, 1200, 200))+
geom_text(aes(label = round(after_stat(y), 0), group = x),
stat = 'summary', fun = sum, vjust = -1)+
facet_wrap(~scenario)+
theme_bw()+
theme_minimal()+
theme(plot.title = element_text(size = 16),
strip.text.x  = element_text(size=12),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
# panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title.position =  "plot")+
labs(title = paste("Parameter:", unit_param_selected, "\nOriginQuery:", origQuery),
fill ="구분",
x = "연도",
y = unit_param_selected)
unique(GGS_621_data$param)[3] -> param_selected
param_selected
GGS_621_data %>%
filter(param == param_selected) %>%
distinct(units)->unit_param_selected
unit_param_selected
GGS_621_data %>%
filter(param == param_selected) %>%
distinct(origQuery) ->origQuery
origQuery
GGS_621_data %>%
filter(param == param_selected & x >= 2015) %>%
#group_by(x, class1, scenario, origQuery) %>%
#summarise(value = sum(value)) %>%
ggplot(aes(x = x, y = value,
group = sector, fill = sector
))+
geom_bar(stat='identity')+
# scale_fill_brewer(palette="Set1")+
scale_x_continuous(limits = c(2010, 2055), breaks = seq(2015, 2050, 5))+
#  scale_y_continuous(labels = comma, limits= c(0, 1200), breaks = seq(0, 1200, 200))+
geom_text(aes(label = round(after_stat(y), 0), group = x),
stat = 'summary', fun = sum, vjust = -1)+
facet_wrap(~scenario)+
theme_bw()+
theme_minimal()+
theme(plot.title = element_text(size = 16),
strip.text.x  = element_text(size=12),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
# panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title.position =  "plot")+
labs(title = paste("Parameter:", unit_param_selected, "\nOriginQuery:", origQuery),
fill ="구분",
x = "연도",
y = unit_param_selected)
GGS_621_data %>%
filter(param == param_selected & x >= 2015)
GGS_621_data %>%
filter(param == param_selected & x >= 2015) %>% View()
####### Image create using function
mkdir("C:/R/Rproject/jiseok_personal/GGS621/gcamextractor/img")
####### Image create using function
dir.create("C:/R/Rproject/jiseok_personal/GGS621/gcamextractor/img")
is.na(unique(GGS_621_data$param))
for (i in param_all) {
GGS_621_data %>%
filter(param == i) %>%
distinct(units)->unit_param_selected
unit_param_selected
GGS_621_data %>%
filter(param == i) %>%
distinct(origQuery) ->origQuery
graph = GGS_621_data %>%
filter(param == i & x >= 2015) %>%
group_by(x, class1, scenario, origQuery) %>%
summarise(value = sum(value)) %>%
ggplot(aes(x = x, y = value, group = class1, fill = class1))+
geom_bar(stat='identity')+
# scale_fill_brewer(palette="Set1")+
scale_x_continuous(limits = c(2010, 2055), breaks = seq(2015, 2050, 5))+
# scale_y_continuous(labels = comma, limits= c(0, 1200), breaks = seq(0, 1200, 200))+
geom_text(aes(label = round(after_stat(y), 0), group = x),
stat = 'summary', fun = sum, vjust = -1)+
facet_wrap(~scenario)+
theme_bw()+
theme_minimal()+
theme(plot.title = element_text(size = 16),
strip.text.x  = element_text(size=12),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
# panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title.position =  "plot")+
labs(title = paste("Parameter:", i, "\nOriginQuery:", origQuery),
fill ="구분",
x = "연도",
y = unit_param_selected)
setwd("C:/R/Rproject/jiseok_personal/GGS621/gcamextractor/img")
ggsave(plot =graph, file =paste0(i, ".png"),  width =1200, height = 700, units ="px", dpi = 150)
}
unique(GGS_621_data$param)
unique(GGS_621_data$param) ->param_all
for (i in param_all) {
GGS_621_data %>%
filter(param == i) %>%
distinct(units)->unit_param_selected
unit_param_selected
GGS_621_data %>%
filter(param == i) %>%
distinct(origQuery) ->origQuery
graph = GGS_621_data %>%
filter(param == i & x >= 2015) %>%
group_by(x, class1, scenario, origQuery) %>%
summarise(value = sum(value)) %>%
ggplot(aes(x = x, y = value, group = class1, fill = class1))+
geom_bar(stat='identity')+
# scale_fill_brewer(palette="Set1")+
scale_x_continuous(limits = c(2010, 2055), breaks = seq(2015, 2050, 5))+
# scale_y_continuous(labels = comma, limits= c(0, 1200), breaks = seq(0, 1200, 200))+
geom_text(aes(label = round(after_stat(y), 0), group = x),
stat = 'summary', fun = sum, vjust = -1)+
facet_wrap(~scenario)+
theme_bw()+
theme_minimal()+
theme(plot.title = element_text(size = 16),
strip.text.x  = element_text(size=12),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
# panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title.position =  "plot")+
labs(title = paste("Parameter:", i, "\nOriginQuery:", origQuery),
fill ="구분",
x = "연도",
y = unit_param_selected)
setwd("C:/R/Rproject/jiseok_personal/GGS621/gcamextractor/img")
ggsave(plot =graph, file =paste0(i, ".png"),  width =1200, height = 700, units ="px", dpi = 150)
}
graph = GGS_621_data %>%
filter(param == i & x >= 2015) %>%
group_by(x, class1, scenario, origQuery) %>%
summarise(value = sum(value)) %>%
ggplot(aes(x = x, y = value, group = class1, fill = class1))+
geom_bar(stat='identity')+
# scale_fill_brewer(palette="Set1")+
scale_x_continuous(limits = c(2010, 2055), breaks = seq(2015, 2025, 2035, 2045))+
# scale_y_continuous(labels = comma, limits= c(0, 1200), breaks = seq(0, 1200, 200))+
geom_text(aes(label = round(after_stat(y), 0), group = x),
stat = 'summary', fun = sum, vjust = -1)+
facet_wrap(~scenario)+
theme_bw()+
theme_minimal()+
theme(plot.title = element_text(size = 16),
strip.text.x  = element_text(size=12),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
# panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title.position =  "plot")+
labs(title = paste("Parameter:", i, "\nOriginQuery:", origQuery),
fill ="구분",
x = "연도",
y = unit_param_selected)
graph = GGS_621_data %>%
filter(param == i & x >= 2015) %>%
group_by(x, class1, scenario, origQuery) %>%
summarise(value = sum(value)) %>%
ggplot(aes(x = x, y = value, group = class1, fill = class1))+
geom_bar(stat='identity')+
# scale_fill_brewer(palette="Set1")+
scale_x_continuous(limits = c(2010, 2055), breaks = c(2015, 2025, 2035, 2045))+
# scale_y_continuous(labels = comma, limits= c(0, 1200), breaks = seq(0, 1200, 200))+
geom_text(aes(label = round(after_stat(y), 0), group = x),
stat = 'summary', fun = sum, vjust = -1)+
facet_wrap(~scenario)+
theme_bw()+
theme_minimal()+
theme(plot.title = element_text(size = 16),
strip.text.x  = element_text(size=12),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
# panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title.position =  "plot")+
labs(title = paste("Parameter:", i, "\nOriginQuery:", origQuery),
fill ="구분",
x = "연도",
y = unit_param_selected)
for (i in param_all) {
GGS_621_data %>%
filter(param == i) %>%
distinct(units)->unit_param_selected
unit_param_selected
GGS_621_data %>%
filter(param == i) %>%
distinct(origQuery) ->origQuery
graph = GGS_621_data %>%
filter(param == i & x >= 2015) %>%
group_by(x, class1, scenario, origQuery) %>%
summarise(value = sum(value)) %>%
ggplot(aes(x = x, y = value, group = class1, fill = class1))+
geom_bar(stat='identity')+
# scale_fill_brewer(palette="Set1")+
scale_x_continuous(limits = c(2010, 2055), breaks = c(2015, 2025, 2035, 2045))+
# scale_y_continuous(labels = comma, limits= c(0, 1200), breaks = seq(0, 1200, 200))+
geom_text(aes(label = round(after_stat(y), 0), group = x),
stat = 'summary', fun = sum, vjust = -1)+
facet_wrap(~scenario)+
theme_bw()+
theme_minimal()+
theme(plot.title = element_text(size = 16),
strip.text.x  = element_text(size=12),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
# panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title.position =  "plot")+
labs(title = paste("Parameter:", i, "\nOriginQuery:", origQuery),
fill ="구분",
x = "연도",
y = unit_param_selected)
setwd("C:/R/Rproject/jiseok_personal/GGS621/gcamextractor/img")
ggsave(plot =graph, file =paste0(i, ".png"),  width =1200, height = 700, units ="px", dpi = 150)
}
### Import NZ2050
GGS621_cap_tax <- gcamextractor::readgcam(gcamdatabase = "E:/gcam-v7.0-Windows-Release-Package_GGS621/output/database_basexdb",
paramsSelect = c(#"energy" ## energy 오류 남
"electricity",
"transport",
"building",
"emissions",
"hydrogen"
), ### this is a key
regionsSelect = c("South Korea"),
folder = "gcamextractor/GGS621_cap_tax")
### Import NZ2050
GGS621_cap_tax <- gcamextractor::readgcam(gcamdatabase = "E:/gcam-v7.0-Windows-Release-Package_GGS621/output/database_basexdb",
paramsSelect = c(#"energy" ## energy 오류 남
"electricity",
"transport",
"building",
"emissions",
"hydrogen"
), ### this is a key
regionsSelect = c("South Korea"),
folder = "gcamextractor/GGS621_cap_tax")
setwd("C:/R/Rproject/jiseok_personal/GGS621")
### Import NZ2050
GGS621_cap_tax <- gcamextractor::readgcam(gcamdatabase = "E:/gcam-v7.0-Windows-Release-Package_GGS621/output/database_basexdb",
paramsSelect = c(#"energy" ## energy 오류 남
"electricity",
"transport",
"building",
"emissions",
"hydrogen"
), ### this is a key
regionsSelect = c("South Korea"),
folder = "gcamextractor/GGS621_cap_tax")
GGS621_cap_tax
GGS_621_data<- GGS621_cap_tax$dataAll %>%
mutate(param = ifelse(is.na(param), 'CO2 sequestration by sector', param))
is.na(unique(GGS_621_data$param))
for (i in param_all) {
GGS_621_data %>%
filter(param == i) %>%
distinct(units)->unit_param_selected
unit_param_selected
GGS_621_data %>%
filter(param == i) %>%
distinct(origQuery) ->origQuery
graph = GGS_621_data %>%
filter(param == i & x >= 2015) %>%
group_by(x, class1, scenario, origQuery) %>%
summarise(value = sum(value)) %>%
ggplot(aes(x = x, y = value, group = class1, fill = class1))+
geom_bar(stat='identity')+
# scale_fill_brewer(palette="Set1")+
scale_x_continuous(limits = c(2010, 2055), breaks = c(2015, 2025, 2035, 2045))+
# scale_y_continuous(labels = comma, limits= c(0, 1200), breaks = seq(0, 1200, 200))+
geom_text(aes(label = round(after_stat(y), 0), group = x),
stat = 'summary', fun = sum, vjust = -1)+
facet_wrap(~scenario)+
theme_bw()+
theme_minimal()+
theme(plot.title = element_text(size = 16),
strip.text.x  = element_text(size=12),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
# panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title.position =  "plot")+
labs(title = paste("Parameter:", i, "\nOriginQuery:", origQuery),
fill ="구분",
x = "연도",
y = unit_param_selected)
setwd("C:/R/Rproject/jiseok_personal/GGS621/gcamextractor/img")
ggsave(plot =graph, file =paste0(i, ".png"),  width =1200, height = 700, units ="px", dpi = 150)
}
l
unique(GGS_621_data$param) ->param_all
for (i in param_all) {
GGS_621_data %>%
filter(param == i) %>%
distinct(units)->unit_param_selected
unit_param_selected
GGS_621_data %>%
filter(param == i) %>%
distinct(origQuery) ->origQuery
graph = GGS_621_data %>%
filter(param == i & x >= 2015) %>%
group_by(x, class1, scenario, origQuery) %>%
summarise(value = sum(value)) %>%
ggplot(aes(x = x, y = value, group = class1, fill = class1))+
geom_bar(stat='identity')+
# scale_fill_brewer(palette="Set1")+
scale_x_continuous(limits = c(2010, 2055), breaks = c(2015, 2025, 2035, 2045))+
# scale_y_continuous(labels = comma, limits= c(0, 1200), breaks = seq(0, 1200, 200))+
geom_text(aes(label = round(after_stat(y), 0), group = x),
stat = 'summary', fun = sum, vjust = -1)+
facet_wrap(~scenario)+
theme_bw()+
theme_minimal()+
theme(plot.title = element_text(size = 16),
strip.text.x  = element_text(size=12),
panel.grid.minor.x = element_blank(),
panel.grid.major.x = element_blank(),
# panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
plot.background = element_rect(fill = "white"),
plot.title.position =  "plot")+
labs(title = paste("Parameter:", i, "\nOriginQuery:", origQuery),
fill ="구분",
x = "연도",
y = unit_param_selected)
setwd("C:/R/Rproject/jiseok_personal/GGS621/gcamextractor/img")
ggsave(plot =graph, file =paste0(i, ".png"),  width =1200, height = 700, units ="px", dpi = 150)
}
library(readxl)
getwd()
getwd()
data_ssp2_sector
library(tidyverse)
data_ssp2_sector_longer<-data_ssp2_sector %>%
pivot_longer(-c('scenario', 'region','Units', 'sector'), names_to= "year", values_to="MTC") %>%
mutate(year = as.numeric(year))
str(data_ssp2_sector_longer)
library(scales)
options(scipen = 999)
data_ssp2_sector_longer%>%
ggplot(aes(x = year, y = MTC, group = scenario, color = scenario))+
geom_line()+
scale_y_continuous(labels = comma)+
scale_x_continuous(breaks = c( 2020, 2050, 2100))+
facet_wrap(~sector, scale="free_y", ncol = 4)+
theme(legend.position ="bottom")+
labs(title ="CO2 emission by tech (dac_ssp2 vs dap_ssp2_x3)")
