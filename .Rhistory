as_tibble() %>%
unnest(scenario) %>%
unnest(scenario) %>%
unnest_longer(scenario) %>%
unnest(everything())
## R에서 XML 태그 속성 parsing 하기
a<- xml_find_all(dac_ssp2, xpath=".//region") %>%
map(xml_attrs) %>%
map_df(~as.list(.)) %>%
mutate(TYPE = xml_find_all(dac_ssp2, './/region', ) %>%  xml_name)
is.data.frame(a) # data frame으로 변환 시켜주었으므로 TRUE 나올 것
a
unique(a$name)
dac_ssp2<-read_xml("dac_ssp2.xml")
node<-xml_children(read_xml("dac_ssp2.xml"))
View(node)
# The query must be the same XML found in a GCAM query file:
SAMPLE.GCAMDBLOC <- system.file("extdata",package="rgcam")
SAMPLE.GCAMDBLOC
db_connection <- localDBConn(SAMPLE.GCAMDBLOC, "sample_basexdb")
query_name <- "CO2 concentrations"
co2_query <- '<ClimateQuery title="CO2 concentrations">
<axis1 name="CO2-concentration">none</axis1>
<axis2 name="Year">CO2-concentration[@year]</axis2>
<xPath buildList="true" dataName="CO2-concentration" group="false" sumAll="false">climate-model/CO2-concentration/text()</xPath>
<comments/>
</ClimateQuery>'
addSingleQuery(db_connection, "test.proj", query_name, co2_query)
addSingleQuery(db_connection, "test.proj", query_name, co2_query)
# However it could also be given for instance as a query string that will result in such XML:
SAMPLE.QF <- system.file("ModelInterface", "sample-queries-interactive.xml", package="rgcam")
co2_query <- paste0("doc('", SAMPLE.QF, "')//*[@title='",
query_name, "']")
addSingleQuery(db_connection, "test.proj", query_name, co2_query)
addSingleQuery(db_connection, "test.proj", query_name, co2_query)
# Alternatively a user may use an XML package if for instance their query file is
# stored locally but are running queries on some remote machine:
library(xml2)
queries <- read_xml(SAMPLE.QF)
co2_query <- xml_find_first(queries, paste0("//*[@title='", query_name, "']"))
addSingleQuery(db_connection, "test.proj", query_name, co2_query)
# Install packages from github -------------------------------------------------
# ..............................................................................
# Uncomment these lines if you need to install the packages
# Hint: Select multiple lines and then (CTRL+SHIFT+C)
# install.packages("remotes") # If required
# install.packages("dplyr") # If required
#library(remotes)
# remotes::install_github("JGCRI/gcamextractor")
# remotes::install_github("JGCRI/rchart")
# remotes::install_github("JGCRI/rmap")
library(gcamextractor)
library(rchart)
library(rmap)
library(dplyr)
path_to_gcam_database<- "E:\gcam-v7.0-Windows-Release-Package_NO_CHANGES_AT_ALL\output\database_basexdb"
path_to_gcam_database<- "E:/gcam-v7.0-Windows-Release-Package_NO_CHANGES_AT_ALL/output\/database_basexdb"
#### GCAM7 NO CHANGES AT ALL
path_to_gcam_database<- "E:/gcam-v7.0-Windows-Release-Package_NO_CHANGES_AT_ALL/output/database_basexdb"
gcamextractor::params # view available parameters
gcamextractor::queries # Get all queries used
gcamextractor::map_param_query # Get a table of params and the relevants queries used to extract and calculate them.
??readgcam
dataGCAM <- gcamextractor::readgcam(gcamdatabase = path_to_gcam_database,
paramsSelect = c("emissCO2BySector", "emissCO2BySectorNoBio"), ### this is a key
regionSelct = c("South Korea")
folder = "test_folder")
dataGCAM <- gcamextractor::readgcam(gcamdatabase = path_to_gcam_database,
paramsSelect = c("emissCO2BySector", "emissCO2BySectorNoBio"), ### this is a key
regionSelct = c("South Korea"),
folder = "test_folder")
dataGCAM <- gcamextractor::readgcam(gcamdatabase = path_to_gcam_database,
paramsSelect = c("emissCO2BySector", "emissCO2BySectorNoBio"), ### this is a key
regionSelect = c("South Korea"),
folder = "test_folder")
dataGCAM <- gcamextractor::readgcam(gcamdatabase = path_to_gcam_database,
paramsSelect = c("emissCO2BySector", "emissCO2BySectorNoBio"), ### this is a key
regionsSelect = c("South Korea"),
folder = "test_folder")
dataGCAM
str(dataGCAM)
# View your data
df <- dataGCAM$data; df
dfParam <- dataGCAM$dataAggParam; dfParam
dfClass1 <- dataGCAM$dataAggClass1; dfClass1
unique(dataGCAM$dataAggParam$param)
unique(dataGCAM$dataAggClass1$param)
unique(dataGCAM$dataAggClass2$param)
dfClass1$param
unique(dfClass1$subRegion)
unique(dfClass1$scenario)
# rchart
data_chart <- dfClass1 %>%
dplyr::filter(subRegion %in% c("South Korea"))
unique(data_chart$scenario)
unique(dfClass1$class)
str(dfClass1)
library(ggplot2)
library(gghighlight)
dfClass1 %>%
filter(region=="South Korea" & scenario =="Ref-SSP1-dac_ssp2_x3" & param =="emissCO2BySector") %>%
ggplot(aes(x = x, y = value, group = class, color = class))+
geom_line()+
gghighlight()+
facet_wrap(~class)
dfClass1 %>%
ggplot(aes(x = x, y = value, group = class, color = class))+
geom_line()+
gghighlight()+
facet_wrap(~class)
dfClass1
unique(dfClass1$param)
dfClass1 %>%
filter(param =="emissCO2BySectorNoBio") %>%
ggplot(aes(x = x, y = value, group = class, color = class))+
geom_line()+
gghighlight()+
facet_wrap(~class)
dfClass1 %>%
filter(param =="emissCO2BySectorNoBio")
dfClass1 %>%
filter(param =="emissCO2BySectorNoBio") %>%
distinct(param)
dfClass1 %>%
filter(param =="emissCO2BySectorNoBio") %>%
distinct(class)
dataGCAM <- gcamextractor::readgcam(gcamdatabase = path_to_gcam_database,
paramsSelect = c("emissCO2CumGlobal2010to2100", "emissCO2BySector", "emissCO2BySectorNoBio"), ### this is a key
regionsSelect = c("South Korea"),
folder = "test_folder")
dataGCAM
str(dataGCAM)
# View your data
df <- dataGCAM$data; df
dfParam <- dataGCAM$dataAggParam; dfParam
dataGCAM %>%
filter(param =="emissCO2BySectorNoBio") %>%
ggplot(aes(x = x, y = value, group = class, color = class))+
geom_line()+
gghighlight()+
facet_wrap(~class)
# View your data
df <- dataGCAM$data; df
dfParam <- dataGCAM$dataAggParam; dfParam
dfClass1 <- dataGCAM$dataAggClass1; dfClass1
unique(dataGCAM$dataAggParam$param)
unique(dataGCAM$dataAggClass1$param)
unique(dataGCAM$dataAggClass2$param)
dfClass1$param
unique(dfClass1$subRegion)
unique(dfClass1$scenario)
# rchart
data_chart <- dfClass1 %>%
dplyr::filter(subRegion %in% c("South Korea"))
unique(data_chart$scenario)
unique(dfClass1$class)
str(dfClass1)
library(ggplot2)
library(gghighlight)
dfClass1 %>%
filter(param =="emissCO2BySectorNoBio") %>%
distinct(class)
unique(dfClass1$param)
dfClass1 %>%
filter(param =="emissCO2CumGlobal2010to2100") %>%
ggplot(aes(x = x, y = value, group = class, color = class))+
geom_line()+
gghighlight()+
facet_wrap(~class)
unique(dfClass1$param)
dataGCAM <- gcamextractor::readgcam(gcamdatabase = path_to_gcam_database,
paramsSelect = c("emissGHGBySectorPowerGWPAR5", "emissCO2BySector", "emissCO2BySectorNoBio"), ### this is a key
regionsSelect = c("South Korea"),
folder = "test_folder")
# View your data
df <- dataGCAM$data; df
dfParam <- dataGCAM$dataAggParam; dfParam
dfClass1 <- dataGCAM$dataAggClass1; dfClass1
unique(dataGCAM$dataAggParam$param)
unique(dataGCAM$dataAggClass1$param)
dfClass1 %>%
filter(param =="emissGHGBySectorPowerGWPAR5") %>%
ggplot(aes(x = x, y = value, group = class, color = class))+
geom_line()+
gghighlight()+
facet_wrap(~class)
unique(dfClass1$param)
dfClass1 %>%
filter(param =="emissCO2BySectorNoBio") %>%
distinct(class)
dfClass1 %>%
filter(param =="emissGHGBySectorPowerGWPAR5") %>%
ggplot(aes(x = x, y = value, group = class, color = class))+
geom_line()+
gghighlight()+
facet_wrap(~class)
dfClass1 %>%
filter(param =="emissGHGBySectorPowerGWPAR5")
unique(dfClass1$param)
#### GCAM7 NO CHANGES AT ALL
path_to_gcam_database<- "E:/gcam-v7.0-Windows-Release-Package_NO_CHANGES_AT_ALL/output/database_basexdb"
gcamextractor::params
params_all <- gcamextractor::params
params_all
dataGCAM <- gcamextractor::readgcam(gcamdatabase = path_to_gcam_database,
paramsSelect = params_all,
#c("emissGHGBySectorPowerGWPAR5", "emissCO2BySector", "emissCO2BySectorNoBio"), ### this is a key
regionsSelect = c("South Korea"),
folder = "test_folder")
gcamextractor::params
dataGCAM <- gcamextractor::readgcam(gcamdatabase = path_to_gcam_database,
paramsSelect = c("elecByTechTWh"", emissGHGBySectorPowerGWPAR5", "emissCO2BySector", "emissCO2BySectorNoBio"), ### this is a key
dataGCAM <- gcamextractor::readgcam(gcamdatabase = path_to_gcam_database,
paramsSelect = c("elecByTechTWh","emissGHGBySectorPowerGWPAR5", "emissCO2BySector", "emissCO2BySectorNoBio"), ### this is a key
regionsSelect = c("South Korea"),
folder = "test_folder")
dataGCAM
str(dataGCAM)
# View your data
df <- dataGCAM$data; df
dfParam <- dataGCAM$dataAggParam; dfParam
dfClass1 <- dataGCAM$dataAggClass1; dfClass1
unique(dataGCAM$dataAggParam$param)
unique(dataGCAM$dataAggClass1$param)
unique(dataGCAM$dataAggClass2$param)
dfClass1$param
unique(dfClass1$subRegion)
unique(dfClass1$scenario)
# rchart
data_chart <- dfClass1 %>%
dplyr::filter(subRegion %in% c("South Korea"))
unique(dfClass1$class)
str(dfClass1)
library(ggplot2)
library(gghighlight)
dfClass1 %>%
filter(region=="South Korea" & scenario =="Ref-SSP1-dac_ssp2_x3" & param =="emissCO2BySector") %>%
ggplot(aes(x = x, y = value, group = class, color = class))+
geom_line()+
gghighlight()+
facet_wrap(~class)
unique(dfClass1$param)
dfClass1 %>%
filter(param =="emissCO2BySectorNoBio") %>%
distinct(class)
unique(dfClass1$param)
dfClass1 %>%
filter(param =="emissGHGBySectorPowerGWPAR5") %>%
ggplot(aes(x = x, y = value, group = class, color = class))+
geom_line()+
gghighlight()+
facet_wrap(~class)
dfClass1 %>%
filter(param =="elecByTechTWh") %>%
ggplot(aes(x = x, y = value, group = class, color = class))+
geom_line()+
gghighlight()+
facet_wrap(~class)
charts <- rchart::chart(data_chart)
param_selected<- unique(dfClass1$param)
param_selected
labs(title = paste("parm", i),
y = '사설 수',
x = '날짜')
keyword_top5_by_president = dfClass1 %>%
filter(param == i) %>%
ggplot(aes(x = x, y = value, group = class, color = class))+
geom_line()+
gghighlight()+
facet_wrap(~class)
for (i in param_selected) {
keyword_top5_by_president = dfClass1 %>%
filter(param == i) %>%
ggplot(aes(x = x, y = value, group = class, color = class))+
geom_line()+
gghighlight()+
facet_wrap(~class)
labs(title = paste('특정 키워드가 포함된 (키워드 :', i ,  ')칼럼만 추출하여 빈도 분석'),
y = '사설 수',
x = '날짜')
setwd("C:/Users/User/OneDrive - 한국에너지기술연구원/안지석(개인폴더)/230125_energydata_샘플_가이드_png/resources/images/230607_Energy_Issue/keyword_by_president")
ggsave(plot = keyword_top5_by_president, file =paste0("keyword_", i, ".png"),  width =1200, height = 700, units ="px", dpi = 100)
}
setwd("C:\R\Rproject\jiseok_personal")
setwd("C:/R/Rproject/jiseok_personal/GGS621/figs")
setwd("C:/R/Rproject/jiseok_personal/GGS621)
ggsave(plot = keyword_top5_by_president, file =paste0("paran_", i, ".png"),  width =1200, height = 700, units ="px", dpi = 100)
for (i in param_selected) {
keyword_top5_by_president = dfClass1 %>%
filter(param == i) %>%
ggplot(aes(x = x, y = value, group = class, color = class))+
geom_line()+
gghighlight()+
facet_wrap(~class)
labs(title = paste('특정 키워드가 포함된 (키워드 :', i ,  ')칼럼만 추출하여 빈도 분석'),
y = '사설 수',
x = '날짜')
setwd("C:/R/Rproject/jiseok_personal/GGS621")
ggsave(plot = keyword_top5_by_president, file =paste0("paran_", i, ".png"),  width =1200, height = 700, units ="px", dpi = 100)
}
keyword_top5_by_president = dfClass1 %>%
filter(param == i) %>%
ggplot(aes(x = x, y = value, group = class, color = class))+
geom_line()+
gghighlight()+
facet_wrap(~class)+
theme(plot.title = elemen_text(size=20))+
labs(title = paste('parameter', i ))
for (i in param_selected) {
keyword_top5_by_president = dfClass1 %>%
filter(param == i) %>%
ggplot(aes(x = x, y = value, group = class, color = class))+
geom_line()+
gghighlight()+
facet_wrap(~class)+
theme(plot.title = element_text(size=20))+
labs(title = paste('parameter', i ))
setwd("C:/R/Rproject/jiseok_personal/GGS621")
ggsave(plot = keyword_top5_by_president, file =paste0("paran_", i, ".png"),  width =1200, height = 700, units ="px", dpi = 100)
}
for (i in param_selected) {
keyword_top5_by_president = dfClass1 %>%
filter(param == i) %>%
ggplot(aes(x = x, y = value, group = class, color = class))+
geom_line()+
gghighlight()+
facet_wrap(~class)+
theme(plot.title = element_text(size=20))+
labs(title = paste('parameter:', i ))
setwd("C:/R/Rproject/jiseok_personal/GGS621")
ggsave(plot = keyword_top5_by_president, file =paste0("paran_", i, ".png"),  width =1200, height = 1000, units ="px", dpi = 100)
}
for (i in param_selected) {
keyword_top5_by_president = dfClass1 %>%
filter(param == i) %>%
ggplot(aes(x = x, y = value, group = class, color = class))+
geom_line()+
gghighlight()+
facet_wrap(~class)+
theme(plot.title = element_text(size=20))+
labs(title = paste('parameter:', i ))
setwd("C:/R/Rproject/jiseok_personal/GGS621")
ggsave(plot = keyword_top5_by_president, file =paste0("param_", i, ".png"),  width =1200, height = 1000, units ="px", dpi = 100)
}
for (i in param_selected) {
keyword_top5_by_president = dfClass1 %>%
filter(param == i) %>%
ggplot(aes(x = x, y = value, group = class, color = class))+
geom_line()+
gghighlight(use_direct_label = FALSE)+
facet_wrap(~class)+
theme(plot.title = element_text(size=20))+
labs(title = paste('parameter:', i ))
setwd("C:/R/Rproject/jiseok_personal/GGS621")
ggsave(plot = keyword_top5_by_president, file =paste0("param_", i, ".png"),  width =1200, height = 1000, units ="px", dpi = 100)
}
for (i in param_selected) {
keyword_top5_by_president = dfClass1 %>%
filter(param == i) %>%
ggplot(aes(x = x, y = value, group = class, color = class))+
geom_line()+
gghighlight(use_direct_label = FALSE)+
facet_wrap(~class)+
theme(plot.title = element_text(size=30),
strip.text.x = element_text(size = 20))+
labs(title = paste('parameter:', i ))
setwd("C:/R/Rproject/jiseok_personal/GGS621")
ggsave(plot = keyword_top5_by_president, file =paste0("param_", i, ".png"),  width =1200, height = 1000, units ="px", dpi = 100)
}
keyword_top5_by_president = dfClass1 %>%
filter(param == i) %>%
ggplot(aes(x = x, y = value, group = class, color = class))+
geom_line(linewidth = 2)+
gghighlight(use_direct_label = FALSE)+
facet_wrap(~class)+
theme(plot.title = element_text(size=30),
strip.text.x = element_text(size = 20),
legend.position ="none")+
labs(title = paste('parameter:', i ))
for (i in param_selected) {
keyword_top5_by_president = dfClass1 %>%
filter(param == i) %>%
ggplot(aes(x = x, y = value, group = class, color = class))+
geom_line(linewidth = 2)+
gghighlight(use_direct_label = FALSE)+
facet_wrap(~class)+
theme(plot.title = element_text(size=30),
strip.text.x = element_text(size = 20),
legend.position ="none")+
labs(title = paste('parameter:', i ))
setwd("C:/R/Rproject/jiseok_personal/GGS621")
ggsave(plot = keyword_top5_by_president, file =paste0("param_", i, ".png"),  width =1200, height = 1000, units ="px", dpi = 100)
}
ggplot(aes(x = x, y = value, group = class, color = "gray80""))+
for (i in param_selected) {
keyword_top5_by_president = dfClass1 %>%
filter(param == i) %>%
ggplot(aes(x = x, y = value, group = class, color = "#303d9b"))+
for (i in param_selected) {
keyword_top5_by_president = dfClass1 %>%
filter(param == i) %>%
ggplot(aes(x = x, y = value, group = class), color = "#303d9b")+
geom_line(linewidth = 2)+
gghighlight(use_direct_label = FALSE)+
facet_wrap(~class)+
theme(plot.title = element_text(size=30),
strip.text.x = element_text(size = 20),
legend.position ="none")+
labs(title = paste('parameter:', i ))
setwd("C:/R/Rproject/jiseok_personal/GGS621")
ggsave(plot = keyword_top5_by_president, file =paste0("param_", i, ".png"),  width =1200, height = 1000, units ="px", dpi = 100)
}
for (i in param_selected) {
keyword_top5_by_president = dfClass1 %>%
filter(param == i) %>%
ggplot(aes(x = x, y = value, group = class))+
geom_line(linewidth = 2,  color = "#303d9b")+
gghighlight(use_direct_label = FALSE)+
facet_wrap(~class)+
theme(plot.title = element_text(size=30),
strip.text.x = element_text(size = 20),
legend.position ="none")+
labs(title = paste('parameter:', i ))
setwd("C:/R/Rproject/jiseok_personal/GGS621")
ggsave(plot = keyword_top5_by_president, file =paste0("param_", i, ".png"),  width =1700, height = 1000, units ="px", dpi = 100)
}
data_chart$param
ggsave(plot = keyword_top5_by_president, file =paste0("param_", i, ".png"),  width =2000, height = 1300, units ="px", dpi = 100)
for (i in param_selected) {
keyword_top5_by_president = dfClass1 %>%
filter(param == i) %>%
ggplot(aes(x = x, y = value, group = class))+
geom_line(linewidth = 2,  color = "#303d9b")+
gghighlight(use_direct_label = FALSE)+
facet_wrap(~class)+
theme(plot.title = element_text(size=30),
strip.text.x = element_text(size = 20),
legend.position ="none")+
labs(title = paste('parameter:', i ))
setwd("C:/R/Rproject/jiseok_personal/GGS621")
ggsave(plot = keyword_top5_by_president, file =paste0("param_", i, ".png"),  width =2000, height = 1300, units ="px", dpi = 100)
}
for (i in param_selected) {
keyword_top5_by_president = dfClass1 %>%
filter(param == i) %>%
ggplot(aes(x = x, y = value, group = class))+
geom_line(linewidth = 2,  color = "#303d9b")+
gghighlight(use_direct_label = FALSE,
unhighlighted_params = list(linewidth = 1.5, colour = alpha("gray80", 0.4)))+
facet_wrap(~class)+
theme(plot.title = element_text(size=30),
strip.text.x = element_text(size = 16),
legend.position ="none")+
labs(title = paste('parameter:', i ))
setwd("C:/R/Rproject/jiseok_personal/GGS621")
ggsave(plot = keyword_top5_by_president, file =paste0("param_", i, ".png"),  width =2000, height = 1300, units ="px", dpi = 100)
}
keyword_top5_by_president = dfClass1 %>%
filter(param == i) %>%
ggplot(aes(x = x, y = value, group = class))+
geom_line(linewidth = 2,  color = "#303d9b")+
gghighlight(use_direct_label = FALSE,
unhighlighted_params = list(linewidth = 1.5, colour = alpha("gray80", 0.4)))+
facet_wrap(~class, scales="free_x")+
theme(plot.title = element_text(size=30),
strip.text.x = element_text(size = 16),
legend.position ="none")+
labs(title = paste('parameter:', i ))
keyword_top5_by_president = dfClass1 %>%
filter(param == i) %>%
ggplot(aes(x = x, y = value, group = class))+
geom_line(linewidth = 2,  color = "#303d9b")+
gghighlight(use_direct_label = FALSE,
unhighlighted_params = list(linewidth = 1.5, colour = alpha("gray80", 0.4)))+
facet_wrap(~class, scales="free_x")+
theme(plot.title = element_text(size=30),
strip.text.x = element_text(size = 16),
legend.position ="none")+
labs(title = paste('parameter:', i ))
for (i in param_selected) {
keyword_top5_by_president = dfClass1 %>%
filter(param == i) %>%
ggplot(aes(x = x, y = value, group = class))+
geom_line(linewidth = 2,  color = "#303d9b")+
gghighlight(use_direct_label = FALSE,
unhighlighted_params = list(linewidth = 1.5, colour = alpha("gray80", 0.4)))+
facet_wrap(~class, scales="free_x")+
theme(plot.title = element_text(size=30),
strip.text.x = element_text(size = 16),
legend.position ="none")+
labs(title = paste('parameter:', i ))
setwd("C:/R/Rproject/jiseok_personal/GGS621")
ggsave(plot = keyword_top5_by_president, file =paste0("param_", i, ".png"),  width =2000, height = 1300, units ="px", dpi = 100)
}
for (i in param_selected) {
keyword_top5_by_president = dfClass1 %>%
filter(param == i) %>%
ggplot(aes(x = x, y = value, group = class))+
geom_line(linewidth = 1.2,  color = "#303d9b")+
gghighlight(use_direct_label = FALSE,
unhighlighted_params = list(linewidth = .7, colour = alpha("gray80", 0.4)))+
facet_wrap(~class, scales="free_x")+
theme(plot.title = element_text(size=30),
strip.text.x = element_text(size = 16),
legend.position ="none")+
labs(title = paste('parameter:', i ))
setwd("C:/R/Rproject/jiseok_personal/GGS621")
ggsave(plot = keyword_top5_by_president, file =paste0("param_", i, ".png"),  width =2000, height = 1300, units ="px", dpi = 100)
}
param_selected<- unique(dfClass1$param)
param_selected
gcamextractor::params
