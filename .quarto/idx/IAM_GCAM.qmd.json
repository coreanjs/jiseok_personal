{"title":"KAIST IAM Group","markdown":{"yaml":{"title":"KAIST IAM Group","date":"last-modified","author":[{"name":"안지석","affiliation":"KAIST ITM"}],"title-block-banner":true,"format":{"html":{"theme":"flatly","code-fold":true,"toc":true,"toc-depth":2,"toc-title":"목차","number-sections":true,"highlight-style":"github","self-contained":false}},"execute":{"freeze":true}},"headingText":"Core Model Proposal #359: Hydrogen and transportation technology update","containsRefs":false,"markdown":"\n\n\n## Transportation\n\n-   Natural Gas Vehicles(NGV)\n-   Light-duty vehicles\n    -   지역별로 LDV의 사이즈를 4개씩 구분하였고, 각각의 배터리 용량(kwh poer vehicle) 제시\n    -   BEV battery pack costs는 2020 BNEF EV Outlook에서 가져옴\n    -   cost mark-up??\n    -   Fuel cell stack costs는 [NREL, 2020 Transportation Annual Technology Baseline](https://atb.nrel.gov/transportation/2020/index)에서 가져옴\n\n## transportation_UCD_CORE_CurPol_Korea_Dawoon\n\n-   region : South Korea\n    -   supplysector :\n        -   항공 :\n            -   aviation_intl\n        -   화물 :\n            -   freight\n            -   freight_road\n        -   여객 :\n            -   pass_road\n            -   pass_road_LDV\n            -   pass_road_LDV_4W\n        -   해운 :\n            -   shipping_intl\n    -   energy_final_demand\n        -   항공:\n            -   aviation_intl\n        -   화물:\n            -   freight\n        -   여객:\n            -   pass\n        -   해운:\n            -   shipping_intl\n\n<br>\n\n-   gcam-7의 transportation_UCD_CORE.xml과 비교해보니, supplysector, energy-final-demand의 구성 name은 동일함\n-   The most common failure to run GCAM when double clicking the run-gcam executable script typically relate to Java.\n-   model running 테스트 -\\> `All model periods solved correctly.`\n\n![스크린샷](./img/solved_correctly.png)\n\n-   Model run 결과는 exe - log - main_log.txt 에서 확인 가능\n-   output - queries\n-   ModelInterface - run-model-interface.bat\n\n![Model interface](./img/model_interface.png) \\### transportation\n\n![](./img/modelinterface_trn.png)\n\n# 2023-08-21 meeting with prof.Jeon\n\n-   GCAM7에는 trn_freight_road(트럭)에 hybrid 추가됨. Dawoon 파일에는 hybrid 없음\n-   Created new xml configuration by adding lines\n\n::: callout-note\nfor `<Configuration>` `<Value name = \"transport\">../input/gcamdata/xml/transportation_UCD_SSP1.xml</Value>`\n:::\n\n::: callout-important\n## 분석기간을 2100년이 아닌 2050년까지만 보고싶은데;;; 오류남.\n\nfor stop year `<Value name=\"stop-year\">2050</Value>` -\\> DOESN'T WORK!!!\n:::\n\n-   Saved as `configuration_transportation_SSP1.xml` for backup\n\n-   Again, saved it as `configuration.xlm` cause `run-batct.cat` in exe folder take `configuration.xlm`(not configuration_transporation_SSP1.xml) as input file\n\n-   run model ![model](./img/model_solved.png)\n\n-   for checking model results, go to Modelinterface folder, and click `run-model-interface.bat` and File - Open -DB Open\n\n![model run result](./img/model_interface_2.png)\n\n-   configuration.xml 파일에 `vale name = solver` 밑에 새로운 `value name = transport` 추가\n\n![](./img/value_name.png)\n\n```{r}\n\n\n\n```\n\n# 2023-08-22\n\n### git bash or tortoiseGit?\n\n-   Instead of using `tortoiseGit`, I hope to use `git bash`. Running `tortoise git` takes quite a long time when targeted `.xml` files are heavy. For using, CLI(Command line interface) needs to be learned. But, steep learning curve :(\n\n### git diff\n\nShow changes between commits, commit and working tree, etc\n\n-   Tried to use `git diff` to see difference between versions in a file.\n    1.  moved `transportation_UCD_CORE.xml` into a test folder\n\n    2.  modified a `speed` in 2020 from 450 to 500 for make a difference. and then saved it.\n\n![](./img/diff_test.png)\n\n3.  Result. We can find a difference without add or commit. just typing `git diff` gives the difference.\n\n![](./img/diff_test_result.png)\n\n4.Modified `speed` in 2030, 2035 and typed `git diff` again. Same as 2.\n\n![](./img/git_diff_result2.png)\n\n5.  Commit `git commit` and track my log using `git log`\n\n![](./img/git_log.png)\n\n6.  what's next? reset? revert?\n\n-   DAC file\n\n# 2023-08-29\n\n-   수송분야 transport.configuration_transportation_dawoon.xml\n\n## Representation of H2 in GCAM\n\n-   Tried to make a flow chart of hydrogen in GCAM using `mermaid`\n\n::: column-page\n```{mermaid}\nflowchart TD\n  Electricity --> H2centralproduction\n  Electricity --> H2wholesaledispensing\n  Electricity --> H2industrial\n  Wind --> H2centralproduction\n  Solar --> H2centralproduction\n  Coal --> H2centralproduction\n  Nuclear --> H2centralproduction\n  Gas --> H2centralproduction\n  Gas --> H2wholesaledispensing\n  H2centralproduction --> H2deliverytrack\n  H2centralproduction --> H2pipeline\n  H2deliverytrack --> H2wholesaledelivery\n  H2deliverytrack --> H2wholesaledispensing\n  H2pipeline --> H2wholesaledelivery \n  H2pipeline --> H2wholesaledispensing\n  H2wholesaledelivery --> H2rentaldelivery\n  H2wholesaledelivery --> H2industrial\n  H2rentaldelivery --> CommercialBuildings\n  H2rentaldelivery --> ResidentialBuildings\n  H2industrial --> AmmoniaProduction\n  H2industrial --> IronandSteelProduction\n  H2industrial --> IndustrialEnergyUse\n  H2wholesaledispensing --> AgriculturalMachinery\n  H2wholesaledispensing --> ConstruntionEquipment\n  H2wholesaledispensing --> MiningEquipment\n  H2wholesaledispensing --> H2rentaldispensing\n  H2rentaldispensing --> HeavyDutyTrucks\n  H2rentaldispensing --> LightDutyVehicles\n  H2rentaldispensing --> AirTransport\n  H2rentaldispensing --> RailTransport\n  H2rentaldispensing --> ShipTransport\n```\n:::\n\n\n# 2023-08-31\n\n## to do\n+ Comparing dac_ssp2 and dac_ssp_x3\n+ `transportation_UCD_CORE.xml` in GCAM7  // `transportation_UCD_CORE_CurPol_KOREA_Dawoon.xml`, `transportation_UCD_CORE_NetZero_KOREA_Dawoon.xml` in GCAM-KAIST2.0\n\n## success\n\n\n + discovery of `library(gcamaextractor)`\n \n```{r}\nlibrary(gcamextractor)\n\ngcamextractor::params # view available parameters\ngcamextractor::queries # Get all queries used\n#gcamextractor::map_param_query # Get a table of params and the relevants queries used to extract and calculate them.\n\n#dataGCAM <- gcamextractor::readgcam(gcamdatabase = path_to_gcam_database,\n#                                    paramsSelect = c(\"emissCO2BySector\", \"emissCO2BySectorNoBio\"), \n#                                    folder = \"test_folder\")\n\n```\n \n \n + line charts\n \n## failure\n\n\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-yaml":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"toc-depth":2,"number-sections":true,"highlight-style":"github","self-contained":false,"output-file":"IAM_GCAM.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.1.251","editor":"visual","theme":"cosmo","title":"KAIST IAM Group","date":"last-modified","author":[{"name":"안지석","affiliation":"KAIST ITM"}],"title-block-banner":true,"toc-title":"목차"},"extensions":{"book":{"multiFile":true}}}}}