---
title: "머신러닝과 사업기회 - ITM812"
date: last-modified # now
author: 
 - name: "Jiseok AHN"
   affiliation: "KAIST"
title-block-banner: true
format: 
  html:
    theme: flatly
    code-fold: true
    toc: true
    toc-depth: 3
    toc-title: 목차
    number-sections: true
    number-depth: 2
    highlight-style: github
    self-contained: false
jupyter: python3
bibliography: references.bib

freeze: true
---

# Week 1

## Intro

-   30분만에 첫 강의 끝

# Week 2

## 과정 소개

-   데이터가 많이 쌓이고, 선제적 의사결정 지원, Data-Driven Decision 중요

-   질 좋은, 많은 데이터 활용 중요

-   Data Exploration, Machine Learning 개념 및 실습, Internal/External Insight 발견, 프로세스의 효율적 개선과 경쟁력 향상을 위한 역량 향상 목표

-   Python을 활용한 머신러닝 기반 데이터 분석 실습하고 실제 적용을 위한 모델링 수행

-   Python 3를 기반으로 실습

## 평가기준

-   Term projects : 50%, Peer-review

-   Mid Term : 30%,

-   출석,참여도: 20%

## 강의 구성

-   Regression, Classification, etc.

-   

## Data Analytic (Machine Learning) Value

-   정형/비정형 데이터

-   정형 - 틀이 정해진. 나이, 키, 성별 등의 정보를 담는 데이터

-   비정형 - 이미지, 언어, 소리, 컨설팅

-   인간과 유사한 판단을 할 수 있도록 컴퓨터에게 학습을 시킨다. 적당한 반복을 할 수 있을 때, 이를 대체할 수 도록

## Data -\> Insight -\> Value

-   Analysis : 데이터마이닝, 머신러닝, 딥러닝

-   Action: 의사결정자, 엔지니어, 마케터, 투자자, 인사관리자 등

-   GPU vs CPU. 다윗과 골리앗. 무거운 걸 들을때 다윗 10명 \<\< 찐 골리앗 1명. 우표를 붙이는 작업을 할 때 다윗 10명 \>\> 골리앗 1명.

    -   GPU는 반복작업을 위해 만들어진 것

-   딥러닝은 머신러닝의 세부 단위?. 머신러닝을 잘 알면 딥러닝이 언제 필요한 지 알 수 있을 것

## AI \> Machine Learning \> Deep Learning

-   **AI**: 가장 큰 범주. 큰 범주 안에 머신러닝이 속하고, 머신러닝의 일부분이 딥러닝

-   사람과 유사한 판단을 컴퓨터가 할 수 있게 끔 만드는 것이 **인공지능**

-   기존의 데이터를 이용해 앞으로 일을 예측하는 **머신러닝**

-   머신러닝 안에 여러 알고리즘 중 하나가 **딥러닝**

-   **인공지능**이 먹을 수 있는 모든 음식이라면, **머신러닝**은 그 중 영양가가 많은 고기 음식, 딥러닝은 그 중에서도 최고급 스테이크 요리

## Machine Learning vs. Programming

-   전통적인 SW(프로그래밍)은 한번만 만들면 된다.

-   ML(Machine Learning)은 전통적인 SW 개발과 달리, 데이터 학습을 통해 더 좋은 규칙을 계속 만들어 냄.

-   하드웨어 성능이 좋을 수록, 계속 반복할 수록, 데이터가 많아질 수록 성능도 함께 발전.

-   값을 주면 결과를 제시하는 게 프로그래밍, 데이터와 답을 주면 규칙을 내놓는 게 머신러닝.

## 머신라닝의 세 가지 타입

-   Supervised Learning 지도 학습

    -   제일 많이 쓰임. 지도하다. 가이드하다. 명확하게 답이 있는 것. 정답(맞았다, 틀렸다 가능// TRUE OR FALSE). 라벨링.

    -   **딥러닝**을 잘하라면 라벨링을 잘해야함. 딥러닝은 Classification 방법 중 하나. 방법론은 물론, 데이터 라벨링이 중요.

-   Unsupervised Learning 비지도 학습

    -   지도하지 않는다. 라벨링하지 않는다. 정답이 없다. 정답이 없으니 비슷한 것들끼리 그룹을 지어준다. Grouping-\> Clustering. Similarity. Distance 기반.

    -   Clustering. 비슷한 데에 모여있는 것들끼리. K-means, K-NN(Nearest Neighbor, 최근접 이웃)

-   Reinforcement 강화 학습

    -   정답은 없는데, 부족한 부분을 계속 학습하는 과정. 딥러닝으로 발전하는 것과 비슷함.

-   딥러닝은 Supervised와 Reinforcement가 합쳐진 것이다.

# Week 3

## 통계 vs. Machine Learning

-   통계는 과거를 통해 대표값을 얻는 것. e.g., 평균. 머신라닝은 과거를 통해 미래를 예측하고 인사이트를 찾는 것.

-   표본: 다수에서 소수를 뽑고 대표값을 구하는 것

## Deep Learning

-   다른 머신러닝 기법들과 차이점. Nonlinear function을 풀기 휘애 NONLINEAR FUNCTION을 linear function의 결합으로. -\> 엄청 복잡한 함수(인공지능)를 만들 수 있다.

-   다층 레이어(Multiple layer)

-   Hidden layer가 2개 이상인 NN(Neural Network)을 Deep Learning이라고 부른다.

## Linear function vs. Nonlinear function

-   선형회귀 모델은 '회귀계수(regression coefficient)를 선형 결합으로 표현할 수 있는 모델'

-   계수들과 변수의 곱셈과 그들의 덧셈과 뺄셈으ㅗㄹ만 결합되어 있는 것을 의미한다.

-   독립변수가 일차식인지, 이차식인지, 로그함수인지가 중요한 것이 아니라 추정할 대사인 파라미터가 어떻게 생겼느냐의 문제.

-   y = a0 + a1x1, y = a0+a1x1+a2x2 등은 선형회귀식.

-   비선형회귀 모델은 데이터를 어떻게 변형하더라도 파라미터를 선형결합식으로 표현할 수 없는 모델.

-   선형회귀모델은 파라미터 계수에 대한 해석이 단순하지만, 비선형 모델은 형태가 복잡할 경우 해석하기 어렵기 때문에 통계 모델에서는 비선형회귀 모델을 잘 사용하지 않는다.

## Machine Learning은 문제 해결을 위한 함수 f()를 찾는 것이다.

-   종속변수(y)를 독립변수(x)들의 함수 f(x)로 적합. Y =f(x)

    -   독립변수!!! x1, x2, x3, x4, ... 독립볍수가 아니라면 전처리를 해야 함

-   f(함수)가 무엇일까? 문제를 풀 방법? 분석방법을 의미한다.

-   예제 1) Sales prediction : 특정 고객 -\> 마케핑 캠패인에 반응할 확률

    -   x : 고객 과거 data, 캠페인 요소들

    -   y : 반응할 확률 -\> 캠패인을 확인한 사람에게 세일즈를 하는 것이 좋다.

-   예제 2) 휴대폰 고객이 향후 6개월 이내에 이탈할 확률

    -   x : 휴대폰 고객, y : 이탈할 확률

-   예제 3) y: 다음 주 주가상승 여부 =f(x :최근 주가 추이, 환경분석)

## 머신러닝 모델링 프로세스

1.  문제 정의 및 명확한 목표 설정
2.  데이터 수집 (including Random Sampling)
3.  데이터 탐색, Cleaning, Pre-processing
4.  데이터 분류 및 데이터 세닝
    -   Training set, Validation set, Testing set 으로 구분
5.  데이터 방법론 선택
    -   Regression, Classification, Clustering, Recommender 등 선택
    -   regression은 원인과 결과를 찾는 데 쓸 수 있는데, 상관관계는 correlation. 다르다.
6.  구체적인 기술 및 평가 방법 선택
    -   Linear Regression, Logistic Regression, Decision tree, Random Forest, KNN, K-means, Matrix Factorization
7.  테스트 및 튜닝
8.  결과 및 모델 비교
9.  모델 선택 및 적용

# Week 4

## Regression(회귀)

-   Regression -\> 원인과 결과를 분석하는데 쓰임. y= ax1+bx2+cx3+d 와 같은 회귀식을 도출한다.

-   똘똘한 기울기와 절편을 구하는 것. 기울기 = 가중치, 절편 = 편향.

### 선형회귀

-   가장 훌륭한 선 긋기 -\> 머신러닝은 미래의 방향을 설정하는 것에서 부터 시작. y = ax+b로 표현될 수 있으며, x값이 변함에 따라 y 값도 변한다. Simple linear regression. 예, 독립변수 x가 공부한 시간, 성적 y를 예측할 경우, x가 한 개 이므로, simple linear regression.

-   가장 정확한 기울기 a와 절편 b를 찾으면 된다.

-   여러가지 선을 그을 수 있고, 여러가지 선 중, 반복되는 선 긋기를 통해 가장 훌륭한 선을 찾는다.

-   선형회귀는 임의의 직선을 그어 이에 대한 평균제곱오차를 구하고, 이 값을 가장 작게 만들어주는 a와 b를 찾아가는 작업.

-   어떻게 훌륭한 선을 찾을까? 오차(예측값 - 실제값) 줄이기

-   예측모델 성능 평가

    -   가장 많이 쓰는 방법: **평균 제곱 오차(MSE: Mean Square Error)**

    -   **평균 제곱근 오차(RMSE: Root Mean Square Error)** : MSE 값은 오류의 제곱을 구하므로, 실제 오류의 푱균보다 값이 더 커질 수 있어, MSE 에 루트를 씌운 경우

    -   **평균절대오차(MAE: Mean Absolute Error**)

-   모든 것을 정확히 고려하면 overfitting이 될 수 있다.

-   선형은 직선을 의미하는 것이 아니라 계수들의 곱과 합을로 이루어진 것을 말함.

-   예재로 배우기 : 집값 예측

    -   최근 주변 부동산 시세를 살펴본다. 보통 얼마에 거래되었을까?

    -   방법: 여러가지 특징 세트가 있을 때 특정 변화에 따라 output(y)의 변화를 살펴본다.

-   **(로지스틱 회귀)** 전달받은 정보를 놓고 참과 거짓 중 하나를 Output으로 선택하는 방법론. 참/거짓 판단장치라고 하며, 이진 분류에 많이 사용함. 예제) 합격자 발표에서 점수화 상관없이 '합격' 불합격'만 존재합니다.

## 실습

-   python 설치. Terminal.

    ::: callout-note
    py -m pip install jupyter
    :::

    ::: callout-note
    ```         
    python -m pip install jupyter
    ```

    -   pip install pandas

    -   pip install numpy

    -   pip install matplotlib

    -   pip install seaborn
    :::

    python3 -m pip install matplotlib

-   

-   

```{python}
import pandas as pd
```

```{python}
import pandas as pd ### 데이터 분석을 하기 위한 파이썬 라이브러리 such as a table
import numpy as np ### 수치해석 라이브러리
import matplotlib.pyplot as plt ### 그래프 그리는 라이브러리
import seaborn as sns ### 그래프 그리는 라이브러리
```

```{python}

#| label: fig-polar
#| fig-cap: "A line plot on a polar axis"

import numpy as np
import matplotlib.pyplot as plt

r = np.arange(0, 2, 0.01)
theta = 2 * np.pi * r
fig, ax = plt.subplots(
  subplot_kw = {'projection': 'polar'} 
)
ax.plot(theta, r)
ax.set_rticks([0.5, 1, 1.5, 2])
ax.grid(True)
plt.show()
```

```{python}
df=pd.read_csv("./ITM812/BostonHousing2.csv")
```

```{python}
#데이터셋을 불러와서 첫 세 줄을 출력하여 데이터의 구성을 한 번 살펴볼게요.
df.tail(10)
#df.tail(3)
```

# Week7. 2023.10.17.

-   회귀분석. 선형 회귀 vs 로지스틱

    -   linear regression

    -   logistic -\> binary classification. 분류에 따라 true or false로 구분 될 수 있는 것.

-   Classification(supervised learning) -\> labeling -\> deep learning.

    -   classification은 정답이 있다.[ㅇㅇㅇ](https://datascienceschool.net/03%20machine%20learning/09.01%20%EB%B6%84%EB%A5%98%EC%9A%A9%20%EC%98%88%EC%A0%9C%20%EB%8D%B0%EC%9D%B4%ED%84%B0.html#id5)

# 기말 조별 과제

1.  카드 사용에 있어 사기를 판별하는 분석
    -   데이터 출처 : [Transaction Data for fraud analysis,kaggle](https://www.kaggle.com/datasets/isabbaggin/transaction-fraudulent-financial-syntheticdata)

    -   은행에서 사기 예방 및 처방을 위한 포괄적인 데이터 세트를 생성하려면 다양한 데이터 포인트를 수집하고 생성해야 합니다. 이 데이터 세트는 실제 사기 탐지 데이터 세트보다 훨씬 간단하지만, 필요에 따라 확장하고 구체화할 수 있습니다.

    -   이 데이터 세트에는 데이터 분석 실습 및 해커톤을 위해 설계된 데이터가 포함되어 있습니다. 이 데이터 집합은 전적으로 컴퓨터로 생성되었으며 실제 정보를 포함하지 않으므로 개인정보 보호 및 데이터 보호를 보장합니다.
2.  포브스(Forbes)지에 등재된 부자 데이터 분석
    -   데이터 출처 : [Billionaires listed in Forbes, kaggle](https://www.kaggle.com/datasets/sujalluhar/billionaires-listed-in-forbes)

    -   부에 영향을 미치는 요인은 무엇일까? 이에 대한 답으로 저개발국이나 개발도상국을 위한 귀중한 기회를 식별하십시오. 데이터를 조사함으로써 국가가 부와 복지를 높이는 방법에 대해 정보에 기초한 결정을 내리는 데 도움이 되는 통찰력을 발견할 수 있습니다.

    -   이 데이터 세트의 목표는 정책 입안자, 기업가 및 글로벌 규모의 경제 성장과 복지에 기여하려는 모든 사람에게 실행 가능한 통찰력을 제공하는 것입니다.
3.  와인을 화학적 조성에 따라 분류하는 분석
    -   출처 : [데이터 사이언스 스쿨](https://datascienceschool.net/03%20machine%20learning/09.01%20%EB%B6%84%EB%A5%98%EC%9A%A9%20%EC%98%88%EC%A0%9C%20%EB%8D%B0%EC%9D%B4%ED%84%B0.html#id5)

    -   와인의 화학 조성을 사용하여 와인의 종류를 예측하기 위한 데이터이다. `load_wine()` 명령으로 로드가능. 파이썬 기본 데이터에 포함되어 있음

    -   시각화 결과에서 어떤 특징값을 사용하면 두 개의 클래스를 완벽하게 구분할 수 있다는 것을 알 수 있다. 어떤 특징값이고 어떤 클래스를 구분할 수 있는가?
